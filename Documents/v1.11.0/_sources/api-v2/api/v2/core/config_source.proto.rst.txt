.. _envoy_api_file_envoy/api/v2/core/config_source.proto:

Configuration sources
=====================


.. _envoy_api_msg_core.ApiConfigSource:

core.ApiConfigSource
--------------------

`[core.ApiConfigSource proto] <https://github.com/envoyproxy/envoy/blob/v1.11.0/api/envoy/api/v2/core/config_source.proto#L22>`_

API configuration source. This identifies the API type and cluster that Envoy
will use to fetch an xDS API.

.. code-block:: json

  {
    "api_type": "...",
    "cluster_names": [],
    "grpc_services": [],
    "refresh_delay": "{...}",
    "request_timeout": "{...}",
    "rate_limit_settings": "{...}"
  }

.. _envoy_api_field_core.ApiConfigSource.api_type:

api_type
  (:ref:`core.ApiConfigSource.ApiType <envoy_api_enum_core.ApiConfigSource.ApiType>`) 
  
.. _envoy_api_field_core.ApiConfigSource.cluster_names:

cluster_names
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Cluster names should be used only with REST. If > 1
  cluster is defined, clusters will be cycled through if any kind of failure
  occurs.
  
  .. note::
  
   The cluster with name ``cluster_name`` must be statically defined and its
   type must not be ``EDS``.
  
  
.. _envoy_api_field_core.ApiConfigSource.grpc_services:

grpc_services
  (:ref:`core.GrpcService <envoy_api_msg_core.GrpcService>`) Multiple gRPC services be provided for GRPC. If > 1 cluster is defined,
  services will be cycled through if any kind of failure occurs.
  
  
.. _envoy_api_field_core.ApiConfigSource.refresh_delay:

refresh_delay
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) For REST APIs, the delay between successive polls.
  
  
.. _envoy_api_field_core.ApiConfigSource.request_timeout:

request_timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) For REST APIs, the request timeout. If not set, a default value of 1s will be used.
  
  
.. _envoy_api_field_core.ApiConfigSource.rate_limit_settings:

rate_limit_settings
  (:ref:`core.RateLimitSettings <envoy_api_msg_core.RateLimitSettings>`) For GRPC APIs, the rate limit settings. If present, discovery requests made by Envoy will be
  rate limited.
  
  

.. _envoy_api_enum_core.ApiConfigSource.ApiType:

Enum core.ApiConfigSource.ApiType
---------------------------------

`[core.ApiConfigSource.ApiType proto] <https://github.com/envoyproxy/envoy/blob/v1.11.0/api/envoy/api/v2/core/config_source.proto#L24>`_

APIs may be fetched via either REST or gRPC.

.. _envoy_api_enum_value_core.ApiConfigSource.ApiType.UNSUPPORTED_REST_LEGACY:

UNSUPPORTED_REST_LEGACY
  *(DEFAULT)* ⁣Ideally this would be 'reserved 0' but one can't reserve the default
  value. Instead we throw an exception if this is ever used.
  
  
.. _envoy_api_enum_value_core.ApiConfigSource.ApiType.REST:

REST
  ⁣REST-JSON v2 API. The `canonical JSON encoding
  <https://developers.google.com/protocol-buffers/docs/proto3#json>`_ for
  the v2 protos is used.
  
  
.. _envoy_api_enum_value_core.ApiConfigSource.ApiType.GRPC:

GRPC
  ⁣gRPC v2 API.
  
  
.. _envoy_api_enum_value_core.ApiConfigSource.ApiType.DELTA_GRPC:

DELTA_GRPC
  ⁣Using the delta xDS gRPC service, i.e. DeltaDiscovery{Request,Response}
  rather than Discovery{Request,Response}. Rather than sending Envoy the entire state
  with every update, the xDS server only sends what has changed since the last update.
  
  DELTA_GRPC is not yet entirely implemented! Initially, only CDS is available.
  Do not use for other xDSes. TODO(fredlas) update/remove this warning when appropriate.
  
  

.. _envoy_api_msg_core.AggregatedConfigSource:

core.AggregatedConfigSource
---------------------------

`[core.AggregatedConfigSource proto] <https://github.com/envoyproxy/envoy/blob/v1.11.0/api/envoy/api/v2/core/config_source.proto#L72>`_

Aggregated Discovery Service (ADS) options. This is currently empty, but when
set in :ref:`ConfigSource <envoy_api_msg_core.ConfigSource>` can be used to
specify that ADS is to be used.

.. code-block:: json

  {}




.. _envoy_api_msg_core.RateLimitSettings:

core.RateLimitSettings
----------------------

`[core.RateLimitSettings proto] <https://github.com/envoyproxy/envoy/blob/v1.11.0/api/envoy/api/v2/core/config_source.proto#L76>`_

Rate Limit settings to be applied for discovery requests made by Envoy.

.. code-block:: json

  {
    "max_tokens": "{...}",
    "fill_rate": "{...}"
  }

.. _envoy_api_field_core.RateLimitSettings.max_tokens:

max_tokens
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) Maximum number of tokens to be used for rate limiting discovery request calls. If not set, a
  default value of 100 will be used.
  
  
.. _envoy_api_field_core.RateLimitSettings.fill_rate:

fill_rate
  (`DoubleValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#doublevalue>`_) Rate at which tokens will be filled per second. If not set, a default fill rate of 10 tokens
  per second will be used.
  
  


.. _envoy_api_msg_core.ConfigSource:

core.ConfigSource
-----------------

`[core.ConfigSource proto] <https://github.com/envoyproxy/envoy/blob/v1.11.0/api/envoy/api/v2/core/config_source.proto#L92>`_

Configuration for :ref:`listeners <config_listeners>`, :ref:`clusters
<config_cluster_manager>`, :ref:`routes
<envoy_api_msg_RouteConfiguration>`, :ref:`endpoints
<arch_overview_service_discovery>` etc. may either be sourced from the
filesystem or from an xDS API source. Filesystem configs are watched with
inotify for updates.

.. code-block:: json

  {
    "path": "...",
    "api_config_source": "{...}",
    "ads": "{...}",
    "initial_fetch_timeout": "{...}"
  }

.. _envoy_api_field_core.ConfigSource.path:

path
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Path on the filesystem to source and watch for configuration updates.
  
  .. note::
  
   The path to the source must exist at config load time.
  
  .. note::
  
    Envoy will only watch the file path for *moves.* This is because in general only moves
    are atomic. The same method of swapping files as is demonstrated in the
    :ref:`runtime documentation <config_runtime_symbolic_link_swap>` can be used here also.
  
  
  
  Precisely one of :ref:`path <envoy_api_field_core.ConfigSource.path>`, :ref:`api_config_source <envoy_api_field_core.ConfigSource.api_config_source>`, :ref:`ads <envoy_api_field_core.ConfigSource.ads>` must be set.
  
.. _envoy_api_field_core.ConfigSource.api_config_source:

api_config_source
  (:ref:`core.ApiConfigSource <envoy_api_msg_core.ApiConfigSource>`) API configuration source.
  
  
  
  Precisely one of :ref:`path <envoy_api_field_core.ConfigSource.path>`, :ref:`api_config_source <envoy_api_field_core.ConfigSource.api_config_source>`, :ref:`ads <envoy_api_field_core.ConfigSource.ads>` must be set.
  
.. _envoy_api_field_core.ConfigSource.ads:

ads
  (:ref:`core.AggregatedConfigSource <envoy_api_msg_core.AggregatedConfigSource>`) When set, ADS will be used to fetch resources. The ADS API configuration
  source in the bootstrap configuration is used.
  
  
  
  Precisely one of :ref:`path <envoy_api_field_core.ConfigSource.path>`, :ref:`api_config_source <envoy_api_field_core.ConfigSource.api_config_source>`, :ref:`ads <envoy_api_field_core.ConfigSource.ads>` must be set.
  
.. _envoy_api_field_core.ConfigSource.initial_fetch_timeout:

initial_fetch_timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Optional initialization timeout.
  When this timeout is specified, Envoy will wait no longer than the specified time for first
  config response on this xDS subscription during the :ref:`initialization process
  <arch_overview_initialization>`. After reaching the timeout, Envoy will move to the next
  initialization phase, even if the first config is not delivered yet. The timer is activated
  when the xDS API subscription starts, and is disarmed on first config update or on error. 0
  means no timeout - Envoy will wait indefinitely for the first xDS config (unless another
  timeout applies). Default 0.
  
  

