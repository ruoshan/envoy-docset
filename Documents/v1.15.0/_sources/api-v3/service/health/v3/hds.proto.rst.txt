.. _envoy_v3_api_file_envoy/service/health/v3/hds.proto:

Health Discovery Service (HDS)
==============================


.. _envoy_v3_api_msg_service.health.v3.Capability:

service.health.v3.Capability
----------------------------

`[service.health.v3.Capability proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L77>`_

Defines supported protocols etc, so the management server can assign proper
endpoints to healthcheck.

.. code-block:: json

  {
    "health_check_protocols": []
  }

.. _envoy_v3_api_field_service.health.v3.Capability.health_check_protocols:

health_check_protocols
  (:ref:`service.health.v3.Capability.Protocol <envoy_v3_api_enum_service.health.v3.Capability.Protocol>`) 
  

.. _envoy_v3_api_enum_service.health.v3.Capability.Protocol:

Enum service.health.v3.Capability.Protocol
------------------------------------------

`[service.health.v3.Capability.Protocol proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L83>`_

Different Envoy instances may have different capabilities (e.g. Redis)
and/or have ports enabled for different protocols.

.. _envoy_v3_api_enum_value_service.health.v3.Capability.Protocol.HTTP:

HTTP
  *(DEFAULT)* ⁣
  
.. _envoy_v3_api_enum_value_service.health.v3.Capability.Protocol.TCP:

TCP
  ⁣
  
.. _envoy_v3_api_enum_value_service.health.v3.Capability.Protocol.REDIS:

REDIS
  ⁣
  

.. _envoy_v3_api_msg_service.health.v3.HealthCheckRequest:

service.health.v3.HealthCheckRequest
------------------------------------

`[service.health.v3.HealthCheckRequest proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L92>`_


.. code-block:: json

  {
    "node": "{...}",
    "capability": "{...}"
  }

.. _envoy_v3_api_field_service.health.v3.HealthCheckRequest.node:

node
  (:ref:`config.core.v3.Node <envoy_v3_api_msg_config.core.v3.Node>`) 
  
.. _envoy_v3_api_field_service.health.v3.HealthCheckRequest.capability:

capability
  (:ref:`service.health.v3.Capability <envoy_v3_api_msg_service.health.v3.Capability>`) 
  


.. _envoy_v3_api_msg_service.health.v3.EndpointHealth:

service.health.v3.EndpointHealth
--------------------------------

`[service.health.v3.EndpointHealth proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L101>`_


.. code-block:: json

  {
    "endpoint": "{...}",
    "health_status": "..."
  }

.. _envoy_v3_api_field_service.health.v3.EndpointHealth.endpoint:

endpoint
  (:ref:`config.endpoint.v3.Endpoint <envoy_v3_api_msg_config.endpoint.v3.Endpoint>`) 
  
.. _envoy_v3_api_field_service.health.v3.EndpointHealth.health_status:

health_status
  (:ref:`config.core.v3.HealthStatus <envoy_v3_api_enum_config.core.v3.HealthStatus>`) 
  


.. _envoy_v3_api_msg_service.health.v3.EndpointHealthResponse:

service.health.v3.EndpointHealthResponse
----------------------------------------

`[service.health.v3.EndpointHealthResponse proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L110>`_


.. code-block:: json

  {
    "endpoints_health": []
  }

.. _envoy_v3_api_field_service.health.v3.EndpointHealthResponse.endpoints_health:

endpoints_health
  (:ref:`service.health.v3.EndpointHealth <envoy_v3_api_msg_service.health.v3.EndpointHealth>`) 
  


.. _envoy_v3_api_msg_service.health.v3.HealthCheckRequestOrEndpointHealthResponse:

service.health.v3.HealthCheckRequestOrEndpointHealthResponse
------------------------------------------------------------

`[service.health.v3.HealthCheckRequestOrEndpointHealthResponse proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L117>`_


.. code-block:: json

  {
    "health_check_request": "{...}",
    "endpoint_health_response": "{...}"
  }

.. _envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.health_check_request:

health_check_request
  (:ref:`service.health.v3.HealthCheckRequest <envoy_v3_api_msg_service.health.v3.HealthCheckRequest>`) 
  
  
  Only one of :ref:`health_check_request <envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.health_check_request>`, :ref:`endpoint_health_response <envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response>` may be set.
  
.. _envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response:

endpoint_health_response
  (:ref:`service.health.v3.EndpointHealthResponse <envoy_v3_api_msg_service.health.v3.EndpointHealthResponse>`) 
  
  
  Only one of :ref:`health_check_request <envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.health_check_request>`, :ref:`endpoint_health_response <envoy_v3_api_field_service.health.v3.HealthCheckRequestOrEndpointHealthResponse.endpoint_health_response>` may be set.
  


.. _envoy_v3_api_msg_service.health.v3.LocalityEndpoints:

service.health.v3.LocalityEndpoints
-----------------------------------

`[service.health.v3.LocalityEndpoints proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L128>`_


.. code-block:: json

  {
    "locality": "{...}",
    "endpoints": []
  }

.. _envoy_v3_api_field_service.health.v3.LocalityEndpoints.locality:

locality
  (:ref:`config.core.v3.Locality <envoy_v3_api_msg_config.core.v3.Locality>`) 
  
.. _envoy_v3_api_field_service.health.v3.LocalityEndpoints.endpoints:

endpoints
  (:ref:`config.endpoint.v3.Endpoint <envoy_v3_api_msg_config.endpoint.v3.Endpoint>`) 
  


.. _envoy_v3_api_msg_service.health.v3.ClusterHealthCheck:

service.health.v3.ClusterHealthCheck
------------------------------------

`[service.health.v3.ClusterHealthCheck proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L141>`_

The cluster name and locality is provided to Envoy for the endpoints that it
health checks to support statistics reporting, logging and debugging by the
Envoy instance (outside of HDS). For maximum usefulness, it should match the
same cluster structure as that provided by EDS.

.. code-block:: json

  {
    "cluster_name": "...",
    "health_checks": [],
    "locality_endpoints": []
  }

.. _envoy_v3_api_field_service.health.v3.ClusterHealthCheck.cluster_name:

cluster_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) 
  
.. _envoy_v3_api_field_service.health.v3.ClusterHealthCheck.health_checks:

health_checks
  (:ref:`config.core.v3.HealthCheck <envoy_v3_api_msg_config.core.v3.HealthCheck>`) 
  
.. _envoy_v3_api_field_service.health.v3.ClusterHealthCheck.locality_endpoints:

locality_endpoints
  (:ref:`service.health.v3.LocalityEndpoints <envoy_v3_api_msg_service.health.v3.LocalityEndpoints>`) 
  


.. _envoy_v3_api_msg_service.health.v3.HealthCheckSpecifier:

service.health.v3.HealthCheckSpecifier
--------------------------------------

`[service.health.v3.HealthCheckSpecifier proto] <https://github.com/envoyproxy/envoy/blob/v1.15.0/api/envoy/service/health/v3/hds.proto#L152>`_


.. code-block:: json

  {
    "cluster_health_checks": [],
    "interval": "{...}"
  }

.. _envoy_v3_api_field_service.health.v3.HealthCheckSpecifier.cluster_health_checks:

cluster_health_checks
  (:ref:`service.health.v3.ClusterHealthCheck <envoy_v3_api_msg_service.health.v3.ClusterHealthCheck>`) 
  
.. _envoy_v3_api_field_service.health.v3.HealthCheckSpecifier.interval:

interval
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) The default is 1 second.
  
  

