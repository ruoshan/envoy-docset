.. _envoy_api_file_envoy/type/matcher/regex.proto:

RegexMatcher
============


.. _envoy_api_msg_type.matcher.RegexMatcher:

type.matcher.RegexMatcher
-------------------------

`[type.matcher.RegexMatcher proto] <https://github.com/envoyproxy/envoy/blob/v1.13.0/api/envoy/type/matcher/regex.proto#L15>`_

A regex matcher designed for safety when used with untrusted input.

.. code-block:: json

  {
    "google_re2": "{...}",
    "regex": "..."
  }

.. _envoy_api_field_type.matcher.RegexMatcher.google_re2:

google_re2
  (:ref:`type.matcher.RegexMatcher.GoogleRE2 <envoy_api_msg_type.matcher.RegexMatcher.GoogleRE2>`, *REQUIRED*) Google's RE2 regex engine.
  
  
  
.. _envoy_api_field_type.matcher.RegexMatcher.regex:

regex
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The regex match string. The string must be supported by the configured engine.
  
  
.. _envoy_api_msg_type.matcher.RegexMatcher.GoogleRE2:

type.matcher.RegexMatcher.GoogleRE2
-----------------------------------

`[type.matcher.RegexMatcher.GoogleRE2 proto] <https://github.com/envoyproxy/envoy/blob/v1.13.0/api/envoy/type/matcher/regex.proto#L19>`_

Google's `RE2 <https://github.com/google/re2>`_ regex engine. The regex string must adhere to
the documented `syntax <https://github.com/google/re2/wiki/Syntax>`_. The engine is designed
to complete execution in linear time as well as limit the amount of memory used.

.. code-block:: json

  {
    "max_program_size": "{...}"
  }

.. _envoy_api_field_type.matcher.RegexMatcher.GoogleRE2.max_program_size:

max_program_size
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) This field controls the RE2 "program size" which is a rough estimate of how complex a
  compiled regex is to evaluate. A regex that has a program size greater than the configured
  value will fail to compile. In this case, the configured max program size can be increased
  or the regex can be simplified. If not specified, the default is 100.
  
  


