.. _envoy_v3_api_file_envoy/extensions/common/dynamic_forward_proxy/v3/dns_cache.proto:

Dynamic forward proxy common configuration
==========================================


.. _envoy_v3_api_msg_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig:

extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig
---------------------------------------------------------

`[extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig proto] <https://github.com/envoyproxy/envoy/blob/v1.13.0/api/envoy/extensions/common/dynamic_forward_proxy/v3/dns_cache.proto#L22>`_

Configuration for the dynamic forward proxy DNS cache. See the :ref:`architecture overview
<arch_overview_http_dynamic_forward_proxy>` for more information.

.. code-block:: json

  {
    "name": "...",
    "dns_lookup_family": "...",
    "dns_refresh_rate": "{...}",
    "host_ttl": "{...}",
    "max_hosts": "{...}"
  }

.. _envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The name of the cache. Multiple named caches allow independent dynamic forward proxy
  configurations to operate within a single Envoy process using different configurations. All
  configurations with the same name *must* otherwise have the same settings when referenced
  from different configuration components. Configuration will fail to load if this is not
  the case.
  
  
.. _envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.dns_lookup_family:

dns_lookup_family
  (:ref:`config.cluster.v3.Cluster.DnsLookupFamily <envoy_v3_api_enum_config.cluster.v3.Cluster.DnsLookupFamily>`) The DNS lookup family to use during resolution.
  
  
  
.. _envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.dns_refresh_rate:

dns_refresh_rate
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) The DNS refresh rate for currently cached DNS hosts. If not specified defaults to 60s.
  
  .. note:
  
   The returned DNS TTL is not currently used to alter the refresh rate. This feature will be
   added in a future change.
  
  
.. _envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.host_ttl:

host_ttl
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) The TTL for hosts that are unused. Hosts that have not been used in the configured time
  interval will be purged. If not specified defaults to 5m.
  
  .. note:
  
    The TTL is only checked at the time of DNS refresh, as specified by *dns_refresh_rate*. This
    means that if the configured TTL is shorter than the refresh rate the host may not be removed
    immediately.
  
   .. note:
  
    The TTL has no relation to DNS TTL and is only used to control Envoy's resource usage.
  
  
.. _envoy_v3_api_field_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig.max_hosts:

max_hosts
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) The maximum number of hosts that the cache will hold. If not specified defaults to 1024.
  
  .. note:
  
    The implementation is approximate and enforced independently on each worker thread, thus
    it is possible for the maximum hosts in the cache to go slightly above the configured
    value depending on timing. This is similar to how other circuit breakers work.
  
  

