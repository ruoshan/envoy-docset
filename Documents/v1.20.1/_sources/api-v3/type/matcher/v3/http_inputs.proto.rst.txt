.. _envoy_v3_api_file_envoy/type/matcher/v3/http_inputs.proto:

Common HTTP Inputs
==================




.. _envoy_v3_api_msg_type.matcher.v3.HttpRequestHeaderMatchInput:

type.matcher.v3.HttpRequestHeaderMatchInput
-------------------------------------------

:repo:`[type.matcher.v3.HttpRequestHeaderMatchInput proto] <api/envoy/type/matcher/v3/http_inputs.proto#L19>`

Match input indicates that matching should be done on a specific request header.
The resulting input string will be all headers for the given key joined by a comma,
e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
string will be 'bar,baz'.

.. code-block:: json

  {
    "header_name": "..."
  }

.. _envoy_v3_api_field_type.matcher.v3.HttpRequestHeaderMatchInput.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The request header to match on.
  
  


.. _envoy_v3_api_msg_type.matcher.v3.HttpRequestTrailerMatchInput:

type.matcher.v3.HttpRequestTrailerMatchInput
--------------------------------------------

:repo:`[type.matcher.v3.HttpRequestTrailerMatchInput proto] <api/envoy/type/matcher/v3/http_inputs.proto#L30>`

Match input indicates that matching should be done on a specific request trailer.
The resulting input string will be all headers for the given key joined by a comma,
e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
string will be 'bar,baz'.

.. code-block:: json

  {
    "header_name": "..."
  }

.. _envoy_v3_api_field_type.matcher.v3.HttpRequestTrailerMatchInput.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The request trailer to match on.
  
  


.. _envoy_v3_api_msg_type.matcher.v3.HttpResponseHeaderMatchInput:

type.matcher.v3.HttpResponseHeaderMatchInput
--------------------------------------------

:repo:`[type.matcher.v3.HttpResponseHeaderMatchInput proto] <api/envoy/type/matcher/v3/http_inputs.proto#L41>`

Match input indicating that matching should be done on a specific response header.
The resulting input string will be all headers for the given key joined by a comma,
e.g. if the response contains two 'foo' headers with value 'bar' and 'baz', the input
string will be 'bar,baz'.

.. code-block:: json

  {
    "header_name": "..."
  }

.. _envoy_v3_api_field_type.matcher.v3.HttpResponseHeaderMatchInput.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The response header to match on.
  
  


.. _envoy_v3_api_msg_type.matcher.v3.HttpResponseTrailerMatchInput:

type.matcher.v3.HttpResponseTrailerMatchInput
---------------------------------------------

:repo:`[type.matcher.v3.HttpResponseTrailerMatchInput proto] <api/envoy/type/matcher/v3/http_inputs.proto#L52>`

Match input indicates that matching should be done on a specific response trailer.
The resulting input string will be all headers for the given key joined by a comma,
e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
string will be 'bar,baz'.

.. code-block:: json

  {
    "header_name": "..."
  }

.. _envoy_v3_api_field_type.matcher.v3.HttpResponseTrailerMatchInput.header_name:

header_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The response trailer to match on.
  
  

