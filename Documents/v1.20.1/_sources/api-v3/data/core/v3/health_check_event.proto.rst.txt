.. _envoy_v3_api_file_envoy/data/core/v3/health_check_event.proto:

Health check logging events
===========================


This documentation is for the Envoy v3 API.

As of Envoy v1.18 the v2 API has been removed and is no longer supported.

If you are upgrading from v2 API config you may wish to view the v2 API documentation:

    :ref:`data/core/v2alpha/health_check_event.proto <v1.17.2:envoy_api_file_envoy/data/core/v2alpha/health_check_event.proto>`


:ref:`Health check logging <arch_overview_health_check_logging>`.

.. _envoy_v3_api_msg_data.core.v3.HealthCheckEvent:

data.core.v3.HealthCheckEvent
-----------------------------

:repo:`[data.core.v3.HealthCheckEvent proto] <api/envoy/data/core/v3/health_check_event.proto#L35>`


.. code-block:: json

  {
    "health_checker_type": "...",
    "host": "{...}",
    "cluster_name": "...",
    "eject_unhealthy_event": "{...}",
    "add_healthy_event": "{...}",
    "health_check_failure_event": "{...}",
    "degraded_healthy_host": "{...}",
    "no_longer_degraded_host": "{...}",
    "timestamp": "{...}"
  }

.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_checker_type:

health_checker_type
  (:ref:`data.core.v3.HealthCheckerType <envoy_v3_api_enum_data.core.v3.HealthCheckerType>`) 
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.host:

host
  (:ref:`config.core.v3.Address <envoy_v3_api_msg_config.core.v3.Address>`) 
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.cluster_name:

cluster_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) 
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event:

eject_unhealthy_event
  (:ref:`data.core.v3.HealthCheckEjectUnhealthy <envoy_v3_api_msg_data.core.v3.HealthCheckEjectUnhealthy>`) Host ejection.
  
  
  
  Precisely one of :ref:`eject_unhealthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event>`, :ref:`add_healthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event>`, :ref:`health_check_failure_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event>`, :ref:`degraded_healthy_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host>`, :ref:`no_longer_degraded_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host>` must be set.
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event:

add_healthy_event
  (:ref:`data.core.v3.HealthCheckAddHealthy <envoy_v3_api_msg_data.core.v3.HealthCheckAddHealthy>`) Host addition.
  
  
  
  Precisely one of :ref:`eject_unhealthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event>`, :ref:`add_healthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event>`, :ref:`health_check_failure_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event>`, :ref:`degraded_healthy_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host>`, :ref:`no_longer_degraded_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host>` must be set.
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event:

health_check_failure_event
  (:ref:`data.core.v3.HealthCheckFailure <envoy_v3_api_msg_data.core.v3.HealthCheckFailure>`) Host failure.
  
  
  
  Precisely one of :ref:`eject_unhealthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event>`, :ref:`add_healthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event>`, :ref:`health_check_failure_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event>`, :ref:`degraded_healthy_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host>`, :ref:`no_longer_degraded_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host>` must be set.
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host:

degraded_healthy_host
  (:ref:`data.core.v3.DegradedHealthyHost <envoy_v3_api_msg_data.core.v3.DegradedHealthyHost>`) Healthy host became degraded.
  
  
  
  Precisely one of :ref:`eject_unhealthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event>`, :ref:`add_healthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event>`, :ref:`health_check_failure_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event>`, :ref:`degraded_healthy_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host>`, :ref:`no_longer_degraded_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host>` must be set.
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host:

no_longer_degraded_host
  (:ref:`data.core.v3.NoLongerDegradedHost <envoy_v3_api_msg_data.core.v3.NoLongerDegradedHost>`) A degraded host returned to being healthy.
  
  
  
  Precisely one of :ref:`eject_unhealthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.eject_unhealthy_event>`, :ref:`add_healthy_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.add_healthy_event>`, :ref:`health_check_failure_event <envoy_v3_api_field_data.core.v3.HealthCheckEvent.health_check_failure_event>`, :ref:`degraded_healthy_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.degraded_healthy_host>`, :ref:`no_longer_degraded_host <envoy_v3_api_field_data.core.v3.HealthCheckEvent.no_longer_degraded_host>` must be set.
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckEvent.timestamp:

timestamp
  (`Timestamp <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp>`_) Timestamp for event.
  
  


.. _envoy_v3_api_msg_data.core.v3.HealthCheckEjectUnhealthy:

data.core.v3.HealthCheckEjectUnhealthy
--------------------------------------

:repo:`[data.core.v3.HealthCheckEjectUnhealthy proto] <api/envoy/data/core/v3/health_check_event.proto#L68>`


.. code-block:: json

  {
    "failure_type": "..."
  }

.. _envoy_v3_api_field_data.core.v3.HealthCheckEjectUnhealthy.failure_type:

failure_type
  (:ref:`data.core.v3.HealthCheckFailureType <envoy_v3_api_enum_data.core.v3.HealthCheckFailureType>`) The type of failure that caused this ejection.
  
  


.. _envoy_v3_api_msg_data.core.v3.HealthCheckAddHealthy:

data.core.v3.HealthCheckAddHealthy
----------------------------------

:repo:`[data.core.v3.HealthCheckAddHealthy proto] <api/envoy/data/core/v3/health_check_event.proto#L76>`


.. code-block:: json

  {
    "first_check": "..."
  }

.. _envoy_v3_api_field_data.core.v3.HealthCheckAddHealthy.first_check:

first_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Whether this addition is the result of the first ever health check on a host, in which case
  the configured :ref:`healthy threshold <envoy_v3_api_field_config.core.v3.HealthCheck.healthy_threshold>`
  is bypassed and the host is immediately added.
  
  


.. _envoy_v3_api_msg_data.core.v3.HealthCheckFailure:

data.core.v3.HealthCheckFailure
-------------------------------

:repo:`[data.core.v3.HealthCheckFailure proto] <api/envoy/data/core/v3/health_check_event.proto#L86>`


.. code-block:: json

  {
    "failure_type": "...",
    "first_check": "..."
  }

.. _envoy_v3_api_field_data.core.v3.HealthCheckFailure.failure_type:

failure_type
  (:ref:`data.core.v3.HealthCheckFailureType <envoy_v3_api_enum_data.core.v3.HealthCheckFailureType>`) The type of failure that caused this event.
  
  
.. _envoy_v3_api_field_data.core.v3.HealthCheckFailure.first_check:

first_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Whether this event is the result of the first ever health check on a host.
  
  


.. _envoy_v3_api_msg_data.core.v3.DegradedHealthyHost:

data.core.v3.DegradedHealthyHost
--------------------------------

:repo:`[data.core.v3.DegradedHealthyHost proto] <api/envoy/data/core/v3/health_check_event.proto#L97>`





.. _envoy_v3_api_msg_data.core.v3.NoLongerDegradedHost:

data.core.v3.NoLongerDegradedHost
---------------------------------

:repo:`[data.core.v3.NoLongerDegradedHost proto] <api/envoy/data/core/v3/health_check_event.proto#L102>`




.. _envoy_v3_api_enum_data.core.v3.HealthCheckFailureType:

Enum data.core.v3.HealthCheckFailureType
----------------------------------------

:repo:`[data.core.v3.HealthCheckFailureType proto] <api/envoy/data/core/v3/health_check_event.proto#L20>`


.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckFailureType.ACTIVE:

ACTIVE
  *(DEFAULT)* ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckFailureType.PASSIVE:

PASSIVE
  ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckFailureType.NETWORK:

NETWORK
  ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckFailureType.NETWORK_TIMEOUT:

NETWORK_TIMEOUT
  ⁣
  

.. _envoy_v3_api_enum_data.core.v3.HealthCheckerType:

Enum data.core.v3.HealthCheckerType
-----------------------------------

:repo:`[data.core.v3.HealthCheckerType proto] <api/envoy/data/core/v3/health_check_event.proto#L27>`


.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckerType.HTTP:

HTTP
  *(DEFAULT)* ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckerType.TCP:

TCP
  ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckerType.GRPC:

GRPC
  ⁣
  
.. _envoy_v3_api_enum_value_data.core.v3.HealthCheckerType.REDIS:

REDIS
  ⁣
  
