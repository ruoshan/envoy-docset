.. _envoy_v3_api_file_envoy/config/core/v3/udp_socket_config.proto:

UDP socket config
=================


.. _envoy_v3_api_msg_config.core.v3.UdpSocketConfig:

config.core.v3.UdpSocketConfig
------------------------------

`[config.core.v3.UdpSocketConfig proto] <https://github.com/envoyproxy/envoy/blob/v1.18.4/api/envoy/config/core/v3/udp_socket_config.proto#L17>`_

Generic UDP socket configuration.

.. code-block:: json

  {
    "max_rx_datagram_size": "{...}",
    "prefer_gro": "{...}"
  }

.. _envoy_v3_api_field_config.core.v3.UdpSocketConfig.max_rx_datagram_size:

max_rx_datagram_size
  (`UInt64Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint64value>`_) The maximum size of received UDP datagrams. Using a larger size will cause Envoy to allocate
  more memory per socket. Received datagrams above this size will be dropped. If not set
  defaults to 1500 bytes.
  
  
.. _envoy_v3_api_field_config.core.v3.UdpSocketConfig.prefer_gro:

prefer_gro
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Configures whether Generic Receive Offload (GRO)
  <https://en.wikipedia.org/wiki/Large_receive_offload>_ is preferred when reading from the
  UDP socket. The default is context dependent and is documented where UdpSocketConfig is used.
  This option affects performance but not functionality. If GRO is not supported by the operating
  system, non-GRO receive will be used.
  
  

