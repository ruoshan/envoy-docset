.. _envoy_api_file_envoy/type/matcher/string.proto:

StringMatcher
=============


.. _envoy_api_msg_type.matcher.StringMatcher:

type.matcher.StringMatcher
--------------------------

`[type.matcher.StringMatcher proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/type/matcher/string.proto#L10>`_

Specifies the way to match a string.

.. code-block:: json

  {
    "exact": "...",
    "prefix": "...",
    "suffix": "...",
    "regex": "..."
  }

.. _envoy_api_field_type.matcher.StringMatcher.exact:

exact
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The input string must match exactly the string specified here.
  
  Examples:
  
  * *abc* only matches the value *abc*.
  
  
  
  Precisely one of :ref:`exact <envoy_api_field_type.matcher.StringMatcher.exact>`, :ref:`prefix <envoy_api_field_type.matcher.StringMatcher.prefix>`, :ref:`suffix <envoy_api_field_type.matcher.StringMatcher.suffix>`, :ref:`regex <envoy_api_field_type.matcher.StringMatcher.regex>` must be set.
  
.. _envoy_api_field_type.matcher.StringMatcher.prefix:

prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The input string must have the prefix specified here.
  Note: empty prefix is not allowed, please use regex instead.
  
  Examples:
  
  * *abc* matches the value *abc.xyz*
  
  
  
  Precisely one of :ref:`exact <envoy_api_field_type.matcher.StringMatcher.exact>`, :ref:`prefix <envoy_api_field_type.matcher.StringMatcher.prefix>`, :ref:`suffix <envoy_api_field_type.matcher.StringMatcher.suffix>`, :ref:`regex <envoy_api_field_type.matcher.StringMatcher.regex>` must be set.
  
.. _envoy_api_field_type.matcher.StringMatcher.suffix:

suffix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The input string must have the suffix specified here.
  Note: empty prefix is not allowed, please use regex instead.
  
  Examples:
  
  * *abc* matches the value *xyz.abc*
  
  
  
  Precisely one of :ref:`exact <envoy_api_field_type.matcher.StringMatcher.exact>`, :ref:`prefix <envoy_api_field_type.matcher.StringMatcher.prefix>`, :ref:`suffix <envoy_api_field_type.matcher.StringMatcher.suffix>`, :ref:`regex <envoy_api_field_type.matcher.StringMatcher.regex>` must be set.
  
.. _envoy_api_field_type.matcher.StringMatcher.regex:

regex
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The input string must match the regular expression specified here.
  The regex grammar is defined `here
  <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
  
  Examples:
  
  * The regex *\d{3}* matches the value *123*
  * The regex *\d{3}* does not match the value *1234*
  * The regex *\d{3}* does not match the value *123.456*
  
  
  
  Precisely one of :ref:`exact <envoy_api_field_type.matcher.StringMatcher.exact>`, :ref:`prefix <envoy_api_field_type.matcher.StringMatcher.prefix>`, :ref:`suffix <envoy_api_field_type.matcher.StringMatcher.suffix>`, :ref:`regex <envoy_api_field_type.matcher.StringMatcher.regex>` must be set.
  


.. _envoy_api_msg_type.matcher.ListStringMatcher:

type.matcher.ListStringMatcher
------------------------------

`[type.matcher.ListStringMatcher proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/type/matcher/string.proto#L51>`_

Specifies a list of ways to match a string.

.. code-block:: json

  {
    "patterns": []
  }

.. _envoy_api_field_type.matcher.ListStringMatcher.patterns:

patterns
  (:ref:`type.matcher.StringMatcher <envoy_api_msg_type.matcher.StringMatcher>`, *REQUIRED*) 
  

