.. _envoy_api_file_envoy/data/tap/v2alpha/capture.proto:

Common TAP
==========

Trace capture format for the capture transport socket extension. This dumps plain text read/write
sequences on a socket.

.. _envoy_api_msg_data.tap.v2alpha.Connection:

data.tap.v2alpha.Connection
---------------------------

`[data.tap.v2alpha.Connection proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/capture.proto#L14>`_

Connection properties.

.. code-block:: json

  {
    "id": "...",
    "local_address": "{...}",
    "remote_address": "{...}"
  }

.. _envoy_api_field_data.tap.v2alpha.Connection.id:

id
  (`uint64 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Global unique connection ID for Envoy session. Matches connection IDs used
  in Envoy logs.
  
  
.. _envoy_api_field_data.tap.v2alpha.Connection.local_address:

local_address
  (:ref:`core.Address <envoy_api_msg_core.Address>`) Local address.
  
  
.. _envoy_api_field_data.tap.v2alpha.Connection.remote_address:

remote_address
  (:ref:`core.Address <envoy_api_msg_core.Address>`) Remote address.
  
  


.. _envoy_api_msg_data.tap.v2alpha.Event:

data.tap.v2alpha.Event
----------------------

`[data.tap.v2alpha.Event proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/capture.proto#L25>`_

Event in a capture trace.

.. code-block:: json

  {
    "timestamp": "{...}",
    "read": "{...}",
    "write": "{...}"
  }

.. _envoy_api_field_data.tap.v2alpha.Event.timestamp:

timestamp
  (`Timestamp <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp>`_) Timestamp for event.
  
  
.. _envoy_api_field_data.tap.v2alpha.Event.read:

read
  (:ref:`data.tap.v2alpha.Event.Read <envoy_api_msg_data.tap.v2alpha.Event.Read>`) 
  Read or write with content as bytes string.
  
  
  Only one of :ref:`read <envoy_api_field_data.tap.v2alpha.Event.read>`, :ref:`write <envoy_api_field_data.tap.v2alpha.Event.write>` may be set.
  
.. _envoy_api_field_data.tap.v2alpha.Event.write:

write
  (:ref:`data.tap.v2alpha.Event.Write <envoy_api_msg_data.tap.v2alpha.Event.Write>`) 
  Read or write with content as bytes string.
  
  
  Only one of :ref:`read <envoy_api_field_data.tap.v2alpha.Event.read>`, :ref:`write <envoy_api_field_data.tap.v2alpha.Event.write>` may be set.
  
.. _envoy_api_msg_data.tap.v2alpha.Event.Read:

data.tap.v2alpha.Event.Read
---------------------------

`[data.tap.v2alpha.Event.Read proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/capture.proto#L29>`_

Data read by Envoy from the transport socket.

.. code-block:: json

  {
    "data": "..."
  }

.. _envoy_api_field_data.tap.v2alpha.Event.Read.data:

data
  (`bytes <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Binary data read.
  
  


.. _envoy_api_msg_data.tap.v2alpha.Event.Write:

data.tap.v2alpha.Event.Write
----------------------------

`[data.tap.v2alpha.Event.Write proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/capture.proto#L35>`_

Data written by Envoy to the transport socket.

.. code-block:: json

  {
    "data": "...",
    "end_stream": "..."
  }

.. _envoy_api_field_data.tap.v2alpha.Event.Write.data:

data
  (`bytes <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Binary data written.
  
  
.. _envoy_api_field_data.tap.v2alpha.Event.Write.end_stream:

end_stream
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Stream was half closed after this write.
  
  



.. _envoy_api_msg_data.tap.v2alpha.Trace:

data.tap.v2alpha.Trace
----------------------

`[data.tap.v2alpha.Trace proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/data/tap/v2alpha/capture.proto#L51>`_

Sequence of read/write events that constitute a captured trace on a socket.
Multiple Trace messages might be emitted for a given connection ID, with the
sink (e.g. file set, network) responsible for later reassembly.

.. code-block:: json

  {
    "connection": "{...}",
    "events": []
  }

.. _envoy_api_field_data.tap.v2alpha.Trace.connection:

connection
  (:ref:`data.tap.v2alpha.Connection <envoy_api_msg_data.tap.v2alpha.Connection>`) Connection properties.
  
  
.. _envoy_api_field_data.tap.v2alpha.Trace.events:

events
  (:ref:`data.tap.v2alpha.Event <envoy_api_msg_data.tap.v2alpha.Event>`) Sequence of observed events.
  
  

