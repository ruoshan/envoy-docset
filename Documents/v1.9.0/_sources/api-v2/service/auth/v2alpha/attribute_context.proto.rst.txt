.. _envoy_api_file_envoy/service/auth/v2alpha/attribute_context.proto:

Attribute Context 
==================

See :ref:`network filter configuration overview <config_network_filters_ext_authz>`
and :ref:`HTTP filter configuration overview <config_http_filters_ext_authz>`.

.. _envoy_api_msg_service.auth.v2alpha.AttributeContext:

service.auth.v2alpha.AttributeContext
-------------------------------------

`[service.auth.v2alpha.AttributeContext proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/attribute_context.proto#L19>`_

An attribute is a piece of metadata that describes an activity on a network.
For example, the size of an HTTP request, or the status code of an HTTP response.

Each attribute has a type and a name, which is logically defined as a proto message field
of the `AttributeContext`. The `AttributeContext` is a collection of individual attributes
supported by Envoy authorization system.

.. code-block:: json

  {
    "source": "{...}",
    "destination": "{...}",
    "request": "{...}",
    "context_extensions": "{...}"
  }

.. _envoy_api_field_service.auth.v2alpha.AttributeContext.source:

source
  (:ref:`service.auth.v2alpha.AttributeContext.Peer <envoy_api_msg_service.auth.v2alpha.AttributeContext.Peer>`) The source of a network activity, such as starting a TCP connection.
  In a multi hop network activity, the source represents the sender of the
  last hop.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.destination:

destination
  (:ref:`service.auth.v2alpha.AttributeContext.Peer <envoy_api_msg_service.auth.v2alpha.AttributeContext.Peer>`) The destination of a network activity, such as accepting a TCP connection.
  In a multi hop network activity, the destination represents the receiver of
  the last hop.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.request:

request
  (:ref:`service.auth.v2alpha.AttributeContext.Request <envoy_api_msg_service.auth.v2alpha.AttributeContext.Request>`) Represents a network request, such as an HTTP request.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.context_extensions:

context_extensions
  (map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) This is analogous to http_request.headers, however these contents will not be sent to the
  upstream server. Context_extensions provide an extension mechanism for sending additional
  information to the auth server without modifying the proto definition. It maps to the
  internal opaque context in the filter chain.
  
  
.. _envoy_api_msg_service.auth.v2alpha.AttributeContext.Peer:

service.auth.v2alpha.AttributeContext.Peer
------------------------------------------

`[service.auth.v2alpha.AttributeContext.Peer proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/attribute_context.proto#L24>`_

This message defines attributes for a node that handles a network request.
The node can be either a service or an application that sends, forwards,
or receives the request. Service peers should fill in the `service`,
`principal`, and `labels` as appropriate.

.. code-block:: json

  {
    "address": "{...}",
    "service": "...",
    "labels": "{...}",
    "principal": "..."
  }

.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Peer.address:

address
  (:ref:`core.Address <envoy_api_msg_core.Address>`) The address of the peer, this is typically the IP address.
  It can also be UDS path, or others.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Peer.service:

service
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The canonical service name of the peer.
  It should be set to :ref:`the HTTP x-envoy-downstream-service-cluster
  <config_http_conn_man_headers_downstream-service-cluster>`
  If a more trusted source of the service name is available through mTLS/secure naming, it
  should be used.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Peer.labels:

labels
  (map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) The labels associated with the peer.
  These could be pod labels for Kubernetes or tags for VMs.
  The source of the labels could be an X.509 certificate or other configuration.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Peer.principal:

principal
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The authenticated identity of this peer.
  For example, the identity associated with the workload such as a service account.
  If an X.509 certificate is used to assert the identity this field should be sourced from
  `Subject` or `Subject Alternative Names`. The primary identity should be the principal.
  The principal format is issuer specific.
  
  Example:
  *    SPIFFE format is `spiffe://trust-domain/path`
  *    Google account format is `https://accounts.google.com/{userid}`
  
  


.. _envoy_api_msg_service.auth.v2alpha.AttributeContext.Request:

service.auth.v2alpha.AttributeContext.Request
---------------------------------------------

`[service.auth.v2alpha.AttributeContext.Request proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/attribute_context.proto#L54>`_

Represents a network request, such as an HTTP request.

.. code-block:: json

  {
    "time": "{...}",
    "http": "{...}"
  }

.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Request.time:

time
  (`Timestamp <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#timestamp>`_) The timestamp when the proxy receives the first byte of the request.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.Request.http:

http
  (:ref:`service.auth.v2alpha.AttributeContext.HttpRequest <envoy_api_msg_service.auth.v2alpha.AttributeContext.HttpRequest>`) Represents an HTTP request or an HTTP-like request.
  
  


.. _envoy_api_msg_service.auth.v2alpha.AttributeContext.HttpRequest:

service.auth.v2alpha.AttributeContext.HttpRequest
-------------------------------------------------

`[service.auth.v2alpha.AttributeContext.HttpRequest proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/attribute_context.proto#L66>`_

This message defines attributes for an HTTP request.
HTTP/1.x, HTTP/2, gRPC are all considered as HTTP requests.

.. code-block:: json

  {
    "id": "...",
    "method": "...",
    "headers": "{...}",
    "path": "...",
    "host": "...",
    "scheme": "...",
    "query": "...",
    "fragment": "...",
    "size": "...",
    "protocol": "..."
  }

.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.id:

id
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The unique ID for a request, which can be propagated to downstream
  systems. The ID should have low probability of collision
  within a single day for a specific service.
  For HTTP requests, it should be X-Request-ID or equivalent.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.method:

method
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP request method, such as `GET`, `POST`.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.headers:

headers
  (map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) The HTTP request headers. If multiple headers share the same key, they
  must be merged according to the HTTP spec. All header keys must be
  lowercased, because HTTP header keys are case-insensitive.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.path:

path
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP URL path.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.host:

host
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP request `Host` or 'Authority` header value.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.scheme:

scheme
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP URL scheme, such as `http` and `https`.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.query:

query
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP URL query in the format of `name1=value`&name2=value2`, as it
  appears in the first line of the HTTP request. No decoding is performed.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.fragment:

fragment
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP URL fragment, excluding leading `#`. No URL decoding is performed.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.size:

size
  (`int64 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The HTTP request size in bytes. If unknown, it must be -1.
  
  
.. _envoy_api_field_service.auth.v2alpha.AttributeContext.HttpRequest.protocol:

protocol
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The network protocol used with the request, such as
  "http/1.1", "spdy/3", "h2", "h2c"
  
  



