.. _envoy_api_file_envoy/api/v2/discovery.proto:

Common discovery API components
===============================


.. _envoy_api_msg_DiscoveryRequest:

DiscoveryRequest
----------------

`[DiscoveryRequest proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/discovery.proto#L17>`_

A DiscoveryRequest requests a set of versioned resources of the same type for
a given Envoy node on some API.

.. code-block:: json

  {
    "version_info": "...",
    "node": "{...}",
    "resource_names": [],
    "type_url": "...",
    "response_nonce": "...",
    "error_detail": "{...}"
  }

.. _envoy_api_field_DiscoveryRequest.version_info:

version_info
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The version_info provided in the request messages will be the version_info
  received with the most recent successfully processed response or empty on
  the first request. It is expected that no new request is sent after a
  response is received until the Envoy instance is ready to ACK/NACK the new
  configuration. ACK/NACK takes place by returning the new API config version
  as applied or the previous API config version respectively. Each type_url
  (see below) has an independent version associated with it.
  
  
.. _envoy_api_field_DiscoveryRequest.node:

node
  (:ref:`core.Node <envoy_api_msg_core.Node>`) The node making the request.
  
  
.. _envoy_api_field_DiscoveryRequest.resource_names:

resource_names
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) List of resources to subscribe to, e.g. list of cluster names or a route
  configuration name. If this is empty, all resources for the API are
  returned. LDS/CDS expect empty resource_names, since this is global
  discovery for the Envoy instance. The LDS and CDS responses will then imply
  a number of resources that need to be fetched via EDS/RDS, which will be
  explicitly enumerated in resource_names.
  
  
.. _envoy_api_field_DiscoveryRequest.type_url:

type_url
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Type of the resource that is being requested, e.g.
  "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
  in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
  required for ADS.
  
  
.. _envoy_api_field_DiscoveryRequest.response_nonce:

response_nonce
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
  discussion on version_info and the DiscoveryResponse nonce comment. This
  may be empty if no nonce is available, e.g. at startup or for non-stream
  xDS implementations.
  
  
.. _envoy_api_field_DiscoveryRequest.error_detail:

error_detail
  (`Status <https://cloud.google.com/natural-language/docs/reference/rpc/google.rpc#status>`_) This is populated when the previous :ref:`DiscoveryResponse <envoy_api_msg_DiscoveryResponse>`
  failed to update configuration. The *message* field in *error_details* provides the Envoy
  internal exception related to the failure. It is only intended for consumption during manual
  debugging, the string provided is not guaranteed to be stable across Envoy versions.
  
  


.. _envoy_api_msg_DiscoveryResponse:

DiscoveryResponse
-----------------

`[DiscoveryResponse proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/discovery.proto#L57>`_


.. code-block:: json

  {
    "version_info": "...",
    "resources": [],
    "type_url": "...",
    "nonce": "..."
  }

.. _envoy_api_field_DiscoveryResponse.version_info:

version_info
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The version of the response data.
  
  
.. _envoy_api_field_DiscoveryResponse.resources:

resources
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) The response resources. These resources are typed and depend on the API being called.
  
  

.. _envoy_api_field_DiscoveryResponse.type_url:

type_url
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Type URL for resources. This must be consistent with the type_url in the
  Any messages for resources if resources is non-empty. This effectively
  identifies the xDS API when muxing over ADS.
  
  
.. _envoy_api_field_DiscoveryResponse.nonce:

nonce
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) For gRPC based subscriptions, the nonce provides a way to explicitly ack a
  specific DiscoveryResponse in a following DiscoveryRequest. Additional
  messages may have been sent by Envoy to the management server for the
  previous version on the stream prior to this DiscoveryResponse, that were
  unprocessed at response send time. The nonce allows the management server
  to ignore any further DiscoveryRequests for the previous version until a
  DiscoveryRequest bearing the nonce. The nonce is optional and is not
  required for non-stream based xDS implementations.
  
  


.. _envoy_api_msg_IncrementalDiscoveryRequest:

IncrementalDiscoveryRequest
---------------------------

`[IncrementalDiscoveryRequest proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/discovery.proto#L122>`_

IncrementalDiscoveryRequest and IncrementalDiscoveryResponse are used in a
new gRPC endpoint for Incremental xDS. The feature is not supported for REST
management servers.

With Incremental xDS, the IncrementalDiscoveryResponses do not need to
include a full snapshot of the tracked resources. Instead
IncrementalDiscoveryResponses are a diff to the state of a xDS client.
In Incremental XDS there are per resource versions which allows to track
state at the resource granularity.
An xDS Incremental session is always in the context of a gRPC bidirectional
stream. This allows the xDS server to keep track of the state of xDS clients
connected to it.

In Incremental xDS the nonce field is required and used to pair
IncrementalDiscoveryResponse to a IncrementalDiscoveryRequest ACK or NACK.
Optionaly, a response message level system_version_info is present for
debugging purposes only.

IncrementalDiscoveryRequest can be sent in 3 situations:
  1. Initial message in a xDS bidirectional gRPC stream.
  2. As a ACK or NACK response to a previous IncrementalDiscoveryResponse.
     In this case the response_nonce is set to the nonce value in the Response.
     ACK or NACK is determined by the absence or presence of error_detail.
  3. Spontaneous IncrementalDiscoveryRequest from the client.
     This can be done to dynamically add or remove elements from the tracked
     resource_names set. In this case response_nonce must be omitted.

.. code-block:: json

  {
    "node": "{...}",
    "type_url": "...",
    "resource_names_subscribe": [],
    "resource_names_unsubscribe": [],
    "initial_resource_versions": "{...}",
    "response_nonce": "...",
    "error_detail": "{...}"
  }

.. _envoy_api_field_IncrementalDiscoveryRequest.node:

node
  (:ref:`core.Node <envoy_api_msg_core.Node>`) The node making the request.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.type_url:

type_url
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Type of the resource that is being requested, e.g.
  "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
  in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
  required for ADS.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.resource_names_subscribe:

resource_names_subscribe
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) IncrementalDiscoveryRequests allow the client to add or remove individual
  resources to the set of tracked resources in the context of a stream.
  All resource names in the resource_names_subscribe list are added to the
  set of tracked resources and all resource names in the resource_names_unsubscribe
  list are removed from the set of tracked resources.
  Unlike in non incremental xDS, an empty resource_names_subscribe or
  resource_names_unsubscribe list simply means that no resources are to be
  added or removed to the resource list.
  The xDS server must send updates for all tracked resources but can also
  send updates for resources the client has not subscribed to. This behavior
  is similar to non incremental xDS.
  These two fields can be set for all types of IncrementalDiscoveryRequests
  (initial, ACK/NACK or spontaneous).
  
  A list of Resource names to add to the list of tracked resources.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.resource_names_unsubscribe:

resource_names_unsubscribe
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) A list of Resource names to remove from the list of tracked resources.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.initial_resource_versions:

initial_resource_versions
  (map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) This map must be populated when the IncrementalDiscoveryRequest is the
  first in a stream. The keys are the resources names of the xDS resources
  known to the xDS client. The values in the map are the associated resource
  level version info.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.response_nonce:

response_nonce
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) When the IncrementalDiscoveryRequest is a ACK or NACK message in response
  to a previous IncrementalDiscoveryResponse, the response_nonce must be the
  nonce in the IncrementalDiscoveryResponse.
  Otherwise response_nonce must be omitted.
  
  
.. _envoy_api_field_IncrementalDiscoveryRequest.error_detail:

error_detail
  (`Status <https://cloud.google.com/natural-language/docs/reference/rpc/google.rpc#status>`_) This is populated when the previous :ref:`DiscoveryResponse <envoy_api_msg_DiscoveryResponse>`
  failed to update configuration. The *message* field in *error_details*
  provides the Envoy internal exception related to the failure.
  
  


.. _envoy_api_msg_IncrementalDiscoveryResponse:

IncrementalDiscoveryResponse
----------------------------

`[IncrementalDiscoveryResponse proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/discovery.proto#L170>`_


.. code-block:: json

  {
    "system_version_info": "...",
    "resources": [],
    "removed_resources": [],
    "nonce": "..."
  }

.. _envoy_api_field_IncrementalDiscoveryResponse.system_version_info:

system_version_info
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The version of the response data (used for debugging).
  
  
.. _envoy_api_field_IncrementalDiscoveryResponse.resources:

resources
  (:ref:`Resource <envoy_api_msg_Resource>`) The response resources. These are typed resources that match the type url
  in the IncrementalDiscoveryRequest.
  
  
.. _envoy_api_field_IncrementalDiscoveryResponse.removed_resources:

removed_resources
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Resources names of resources that have be deleted and to be removed from the xDS Client.
  Removed resources for missing resources can be ignored.
  
  
.. _envoy_api_field_IncrementalDiscoveryResponse.nonce:

nonce
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The nonce provides a way for IncrementalDiscoveryRequests to uniquely
  reference a IncrementalDiscoveryResponse. The nonce is required.
  
  


.. _envoy_api_msg_Resource:

Resource
--------

`[Resource proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/discovery.proto#L187>`_


.. code-block:: json

  {
    "version": "...",
    "resource": "{...}"
  }

.. _envoy_api_field_Resource.version:

version
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The resource level version. It allows xDS to track the state of individual
  resources.
  
  
.. _envoy_api_field_Resource.resource:

resource
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) The resource being tracked.
  
  

