.. _envoy_api_file_envoy/api/v2/eds.proto:

EDS
===

Endpoint discovery :ref:`architecture overview <arch_overview_service_discovery_types_eds>`

.. _envoy_api_msg_ClusterLoadAssignment:

ClusterLoadAssignment
---------------------

`[ClusterLoadAssignment proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/eds.proto#L43>`_

Each route from RDS will map to a single cluster or traffic split across
clusters using weights expressed in the RDS WeightedCluster.

With EDS, each cluster is treated independently from a LB perspective, with
LB taking place between the Localities within a cluster and at a finer
granularity between the hosts within a locality. For a given cluster, the
effective weight of a host is its load_balancing_weight multiplied by the
load_balancing_weight of its Locality.

.. code-block:: json

  {
    "cluster_name": "...",
    "endpoints": [],
    "policy": "{...}"
  }

.. _envoy_api_field_ClusterLoadAssignment.cluster_name:

cluster_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Name of the cluster. This will be the :ref:`service_name
  <envoy_api_field_Cluster.EdsClusterConfig.service_name>` value if specified
  in the cluster :ref:`EdsClusterConfig
  <envoy_api_msg_Cluster.EdsClusterConfig>`.
  
  
.. _envoy_api_field_ClusterLoadAssignment.endpoints:

endpoints
  (:ref:`endpoint.LocalityLbEndpoints <envoy_api_msg_endpoint.LocalityLbEndpoints>`) List of endpoints to load balance to.
  
  
.. _envoy_api_field_ClusterLoadAssignment.policy:

policy
  (:ref:`ClusterLoadAssignment.Policy <envoy_api_msg_ClusterLoadAssignment.Policy>`) Load balancing policy settings.
  
  
.. _envoy_api_msg_ClusterLoadAssignment.Policy:

ClusterLoadAssignment.Policy
----------------------------

`[ClusterLoadAssignment.Policy proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/eds.proto#L54>`_

Load balancing policy settings.

.. code-block:: json

  {
    "drop_overloads": [],
    "overprovisioning_factor": "{...}"
  }

.. _envoy_api_field_ClusterLoadAssignment.Policy.drop_overloads:

drop_overloads
  (:ref:`ClusterLoadAssignment.Policy.DropOverload <envoy_api_msg_ClusterLoadAssignment.Policy.DropOverload>`) Action to trim the overall incoming traffic to protect the upstream
  hosts. This action allows protection in case the hosts are unable to
  recover from an outage, or unable to autoscale or unable to handle
  incoming traffic volume for any reason.
  
  At the client each category is applied one after the other to generate
  the 'actual' drop percentage on all outgoing traffic. For example:
  
  .. code-block:: json
  
   { "drop_overloads": [
       { "category": "throttle", "drop_percentage": 60 }
       { "category": "lb", "drop_percentage": 50 }
   ]}
  
  The actual drop percentages applied to the traffic at the clients will be
     "throttle"_drop = 60%
     "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     actual_outgoing_load = 20% // remaining after applying all categories.
  
  
.. _envoy_api_field_ClusterLoadAssignment.Policy.overprovisioning_factor:

overprovisioning_factor
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) Priority levels and localities are considered overprovisioned with this
  factor (in percentage). This means that we don't consider a priority
  level or locality unhealthy until the percentage of healthy hosts
  multiplied by the overprovisioning factor drops below 100.
  With the default value 140(1.4), Envoy doesn't consider a priority level
  or a locality unhealthy until their percentage of healthy hosts drops
  below 72%. For example:
  
  .. code-block:: json
  
   { "overprovisioning_factor": 100 }
  
  Read more at :ref:`priority levels <arch_overview_load_balancing_priority_levels>` and
  :ref:`localities <arch_overview_load_balancing_locality_weighted_lb>`.
  
  
.. _envoy_api_msg_ClusterLoadAssignment.Policy.DropOverload:

ClusterLoadAssignment.Policy.DropOverload
-----------------------------------------

`[ClusterLoadAssignment.Policy.DropOverload proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/api/v2/eds.proto#L57>`_


.. code-block:: json

  {
    "category": "...",
    "drop_percentage": "{...}"
  }

.. _envoy_api_field_ClusterLoadAssignment.Policy.DropOverload.category:

category
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Identifier for the policy specifying the drop.
  
  
.. _envoy_api_field_ClusterLoadAssignment.Policy.DropOverload.drop_percentage:

drop_percentage
  (:ref:`type.FractionalPercent <envoy_api_msg_type.FractionalPercent>`) Percentage of traffic that should be dropped for the category.
  
  



