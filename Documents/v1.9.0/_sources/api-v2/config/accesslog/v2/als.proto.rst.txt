.. _envoy_api_file_envoy/config/accesslog/v2/als.proto:

gRPC Access Log Service (ALS)
=============================


.. _envoy_api_msg_config.accesslog.v2.HttpGrpcAccessLogConfig:

config.accesslog.v2.HttpGrpcAccessLogConfig
-------------------------------------------

`[config.accesslog.v2.HttpGrpcAccessLogConfig proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/accesslog/v2/als.proto#L15>`_

Configuration for the built-in *envoy.http_grpc_access_log*
:ref:`AccessLog <envoy_api_msg_config.filter.accesslog.v2.AccessLog>`. This configuration will
populate :ref:`StreamAccessLogsMessage.http_logs
<envoy_api_field_service.accesslog.v2.StreamAccessLogsMessage.http_logs>`.

.. code-block:: json

  {
    "common_config": "{...}",
    "additional_request_headers_to_log": [],
    "additional_response_headers_to_log": [],
    "additional_response_trailers_to_log": []
  }

.. _envoy_api_field_config.accesslog.v2.HttpGrpcAccessLogConfig.common_config:

common_config
  (:ref:`config.accesslog.v2.CommonGrpcAccessLogConfig <envoy_api_msg_config.accesslog.v2.CommonGrpcAccessLogConfig>`, *REQUIRED*) 
  
.. _envoy_api_field_config.accesslog.v2.HttpGrpcAccessLogConfig.additional_request_headers_to_log:

additional_request_headers_to_log
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Additional request headers to log in :ref:`HTTPRequestProperties.request_headers
  <envoy_api_field_data.accesslog.v2.HTTPRequestProperties.request_headers>`.
  
  
.. _envoy_api_field_config.accesslog.v2.HttpGrpcAccessLogConfig.additional_response_headers_to_log:

additional_response_headers_to_log
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Additional response headers to log in :ref:`HTTPResponseProperties.response_headers
  <envoy_api_field_data.accesslog.v2.HTTPResponseProperties.response_headers>`.
  
  
.. _envoy_api_field_config.accesslog.v2.HttpGrpcAccessLogConfig.additional_response_trailers_to_log:

additional_response_trailers_to_log
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Additional response trailers to log in :ref:`HTTPResponseProperties.response_trailers
  <envoy_api_field_data.accesslog.v2.HTTPResponseProperties.response_trailers>`.
  
  



.. _envoy_api_msg_config.accesslog.v2.CommonGrpcAccessLogConfig:

config.accesslog.v2.CommonGrpcAccessLogConfig
---------------------------------------------

`[config.accesslog.v2.CommonGrpcAccessLogConfig proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/config/accesslog/v2/als.proto#L39>`_

Common configuration for gRPC access logs.

.. code-block:: json

  {
    "log_name": "...",
    "grpc_service": "{...}"
  }

.. _envoy_api_field_config.accesslog.v2.CommonGrpcAccessLogConfig.log_name:

log_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
  <envoy_api_msg_service.accesslog.v2.StreamAccessLogsMessage.Identifier>`. This allows the
  access log server to differentiate between different access logs coming from the same Envoy.
  
  
.. _envoy_api_field_config.accesslog.v2.CommonGrpcAccessLogConfig.grpc_service:

grpc_service
  (:ref:`core.GrpcService <envoy_api_msg_core.GrpcService>`, *REQUIRED*) The gRPC service for the access log service.
  
  

