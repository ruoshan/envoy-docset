.. _envoy_api_file_envoy/admin/v2alpha/clusters.proto:

Clusters
========


.. _envoy_api_msg_admin.v2alpha.Clusters:

admin.v2alpha.Clusters
----------------------

`[admin.v2alpha.Clusters proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/admin/v2alpha/clusters.proto#L13>`_

Admin endpoint uses this wrapper for `/clusters` to display cluster status information.
See :ref:`/clusters <operations_admin_interface_clusters>` for more information.

.. code-block:: json

  {
    "cluster_statuses": []
  }

.. _envoy_api_field_admin.v2alpha.Clusters.cluster_statuses:

cluster_statuses
  (:ref:`admin.v2alpha.ClusterStatus <envoy_api_msg_admin.v2alpha.ClusterStatus>`) Mapping from cluster name to each cluster's status.
  
  


.. _envoy_api_msg_admin.v2alpha.ClusterStatus:

admin.v2alpha.ClusterStatus
---------------------------

`[admin.v2alpha.ClusterStatus proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/admin/v2alpha/clusters.proto#L19>`_

Details an individual cluster's current status.

.. code-block:: json

  {
    "name": "...",
    "added_via_api": "...",
    "success_rate_ejection_threshold": "{...}",
    "host_statuses": []
  }

.. _envoy_api_field_admin.v2alpha.ClusterStatus.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Name of the cluster.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.added_via_api:

added_via_api
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Denotes whether this cluster was added via API or configured statically.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.success_rate_ejection_threshold:

success_rate_ejection_threshold
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) The success rate threshold used in the last interval. The threshold is used to eject hosts
  based on their success rate. See
  :ref:`Cluster outlier detection <arch_overview_outlier_detection>` statistics
  
  Note: this field may be omitted in any of the three following cases:
  
  1. There were not enough hosts with enough request volume to proceed with success rate based
     outlier ejection.
  2. The threshold is computed to be < 0 because a negative value implies that there was no
     threshold for that interval.
  3. Outlier detection is not enabled for this cluster.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.host_statuses:

host_statuses
  (:ref:`admin.v2alpha.HostStatus <envoy_api_msg_admin.v2alpha.HostStatus>`) Mapping from host address to the host's current status.
  
  


.. _envoy_api_msg_admin.v2alpha.HostStatus:

admin.v2alpha.HostStatus
------------------------

`[admin.v2alpha.HostStatus proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/admin/v2alpha/clusters.proto#L44>`_

Current state of a particular host.

.. code-block:: json

  {
    "address": "{...}",
    "stats": [],
    "health_status": "{...}",
    "success_rate": "{...}",
    "weight": "..."
  }

.. _envoy_api_field_admin.v2alpha.HostStatus.address:

address
  (:ref:`core.Address <envoy_api_msg_core.Address>`) Address of this host.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.stats:

stats
  (:ref:`admin.v2alpha.SimpleMetric <envoy_api_msg_admin.v2alpha.SimpleMetric>`) List of stats specific to this host.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.health_status:

health_status
  (:ref:`admin.v2alpha.HostHealthStatus <envoy_api_msg_admin.v2alpha.HostHealthStatus>`) The host's current health status.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.success_rate:

success_rate
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) Request success rate for this host over the last calculated interval.
  
  Note: the message will not be present if host did not have enough request volume to calculate
  success rate or the cluster did not have enough hosts to run through success rate outlier
  ejection.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.weight:

weight
  (`uint32 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host's weight. If not configured, the value defaults to 1.
  
  


.. _envoy_api_msg_admin.v2alpha.HostHealthStatus:

admin.v2alpha.HostHealthStatus
------------------------------

`[admin.v2alpha.HostHealthStatus proto] <https://github.com/envoyproxy/envoy/blob/master/api/envoy/admin/v2alpha/clusters.proto#L66>`_

Health status for a host.

.. code-block:: json

  {
    "failed_active_health_check": "...",
    "failed_outlier_check": "...",
    "eds_health_status": "..."
  }

.. _envoy_api_field_admin.v2alpha.HostHealthStatus.failed_active_health_check:

failed_active_health_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host is currently failing active health checks.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.failed_outlier_check:

failed_outlier_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host is currently considered an outlier and has been ejected.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.eds_health_status:

eds_health_status
  (:ref:`core.HealthStatus <envoy_api_enum_core.HealthStatus>`) Health status as reported by EDS. Note: only HEALTHY and UNHEALTHY are currently supported
  here.
  TODO(mrice32): pipe through remaining EDS health status possibilities.
  
  

