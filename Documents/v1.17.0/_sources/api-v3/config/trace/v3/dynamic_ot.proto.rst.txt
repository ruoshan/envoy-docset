.. _envoy_v3_api_file_envoy/config/trace/v3/dynamic_ot.proto:

Dynamically loadable OpenTracing tracer
=======================================


.. _envoy_v3_api_msg_config.trace.v3.DynamicOtConfig:

config.trace.v3.DynamicOtConfig
-------------------------------

`[config.trace.v3.DynamicOtConfig proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/trace/v3/dynamic_ot.proto#L24>`_

DynamicOtConfig is used to dynamically load a tracer from a shared library
that implements the `OpenTracing dynamic loading API
<https://github.com/opentracing/opentracing-cpp>`_.

.. _extension_envoy.tracers.dynamic_ot:


This extension may be referenced by the qualified name *envoy.tracers.dynamic_ot*

.. note::
  

  This extension is intended to be robust against untrusted downstream traffic. It assumes that the upstream is trusted.

.. code-block:: json

  {
    "library": "...",
    "config": "{...}"
  }

.. _envoy_v3_api_field_config.trace.v3.DynamicOtConfig.library:

library
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Dynamic library implementing the `OpenTracing API
  <https://github.com/opentracing/opentracing-cpp>`_.
  
  
.. _envoy_v3_api_field_config.trace.v3.DynamicOtConfig.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) The configuration to use when creating a tracer from the given dynamic
  library.
  
  

