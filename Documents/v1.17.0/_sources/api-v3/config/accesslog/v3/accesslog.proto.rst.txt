.. _envoy_v3_api_file_envoy/config/accesslog/v3/accesslog.proto:

Common access log types
=======================


.. _envoy_v3_api_msg_config.accesslog.v3.AccessLog:

config.accesslog.v3.AccessLog
-----------------------------

`[config.accesslog.v3.AccessLog proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L24>`_


.. code-block:: json

  {
    "name": "...",
    "filter": "{...}",
    "typed_config": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.AccessLog.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the access log implementation to instantiate. The name must
  match a statically registered access log. Current built-in loggers include:
  
  #. "envoy.access_loggers.file"
  #. "envoy.access_loggers.http_grpc"
  #. "envoy.access_loggers.tcp_grpc"
  
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLog.filter:

filter
  (:ref:`config.accesslog.v3.AccessLogFilter <envoy_v3_api_msg_config.accesslog.v3.AccessLogFilter>`) Filter which is used to determine if the access log needs to be written.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLog.typed_config:

typed_config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) 
  Custom configuration that depends on the access log being instantiated.
  Built-in configurations include:
  
  #. "envoy.access_loggers.file": :ref:`FileAccessLog
     <envoy_v3_api_msg_extensions.access_loggers.file.v3.FileAccessLog>`
  #. "envoy.access_loggers.http_grpc": :ref:`HttpGrpcAccessLogConfig
     <envoy_v3_api_msg_extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig>`
  #. "envoy.access_loggers.tcp_grpc": :ref:`TcpGrpcAccessLogConfig
     <envoy_v3_api_msg_extensions.access_loggers.grpc.v3.TcpGrpcAccessLogConfig>`
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.AccessLogFilter:

config.accesslog.v3.AccessLogFilter
-----------------------------------

`[config.accesslog.v3.AccessLogFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L58>`_


.. code-block:: json

  {
    "status_code_filter": "{...}",
    "duration_filter": "{...}",
    "not_health_check_filter": "{...}",
    "traceable_filter": "{...}",
    "runtime_filter": "{...}",
    "and_filter": "{...}",
    "or_filter": "{...}",
    "header_filter": "{...}",
    "response_flag_filter": "{...}",
    "grpc_status_filter": "{...}",
    "extension_filter": "{...}",
    "metadata_filter": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter:

status_code_filter
  (:ref:`config.accesslog.v3.StatusCodeFilter <envoy_v3_api_msg_config.accesslog.v3.StatusCodeFilter>`) Status code filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter:

duration_filter
  (:ref:`config.accesslog.v3.DurationFilter <envoy_v3_api_msg_config.accesslog.v3.DurationFilter>`) Duration filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter:

not_health_check_filter
  (:ref:`config.accesslog.v3.NotHealthCheckFilter <envoy_v3_api_msg_config.accesslog.v3.NotHealthCheckFilter>`) Not health check filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter:

traceable_filter
  (:ref:`config.accesslog.v3.TraceableFilter <envoy_v3_api_msg_config.accesslog.v3.TraceableFilter>`) Traceable filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter:

runtime_filter
  (:ref:`config.accesslog.v3.RuntimeFilter <envoy_v3_api_msg_config.accesslog.v3.RuntimeFilter>`) Runtime filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter:

and_filter
  (:ref:`config.accesslog.v3.AndFilter <envoy_v3_api_msg_config.accesslog.v3.AndFilter>`) And filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter:

or_filter
  (:ref:`config.accesslog.v3.OrFilter <envoy_v3_api_msg_config.accesslog.v3.OrFilter>`) Or filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter:

header_filter
  (:ref:`config.accesslog.v3.HeaderFilter <envoy_v3_api_msg_config.accesslog.v3.HeaderFilter>`) Header filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter:

response_flag_filter
  (:ref:`config.accesslog.v3.ResponseFlagFilter <envoy_v3_api_msg_config.accesslog.v3.ResponseFlagFilter>`) Response flag filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter:

grpc_status_filter
  (:ref:`config.accesslog.v3.GrpcStatusFilter <envoy_v3_api_msg_config.accesslog.v3.GrpcStatusFilter>`) gRPC status filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter:

extension_filter
  (:ref:`config.accesslog.v3.ExtensionFilter <envoy_v3_api_msg_config.accesslog.v3.ExtensionFilter>`) Extension filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  
.. _envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter:

metadata_filter
  (:ref:`config.accesslog.v3.MetadataFilter <envoy_v3_api_msg_config.accesslog.v3.MetadataFilter>`) Metadata Filter
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.extension_filter>`, :ref:`metadata_filter <envoy_v3_api_field_config.accesslog.v3.AccessLogFilter.metadata_filter>` must be set.
  


.. _envoy_v3_api_msg_config.accesslog.v3.ComparisonFilter:

config.accesslog.v3.ComparisonFilter
------------------------------------

`[config.accesslog.v3.ComparisonFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L104>`_

Filter on an integer comparison.

.. code-block:: json

  {
    "op": "...",
    "value": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.ComparisonFilter.op:

op
  (:ref:`config.accesslog.v3.ComparisonFilter.Op <envoy_v3_api_enum_config.accesslog.v3.ComparisonFilter.Op>`) Comparison operator.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.ComparisonFilter.value:

value
  (:ref:`config.core.v3.RuntimeUInt32 <envoy_v3_api_msg_config.core.v3.RuntimeUInt32>`) Value to compare against.
  
  

.. _envoy_v3_api_enum_config.accesslog.v3.ComparisonFilter.Op:

Enum config.accesslog.v3.ComparisonFilter.Op
--------------------------------------------

`[config.accesslog.v3.ComparisonFilter.Op proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L108>`_


.. _envoy_v3_api_enum_value_config.accesslog.v3.ComparisonFilter.Op.EQ:

EQ
  *(DEFAULT)* ⁣=
  
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.ComparisonFilter.Op.GE:

GE
  ⁣>=
  
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.ComparisonFilter.Op.LE:

LE
  ⁣<=
  
  

.. _envoy_v3_api_msg_config.accesslog.v3.StatusCodeFilter:

config.accesslog.v3.StatusCodeFilter
------------------------------------

`[config.accesslog.v3.StatusCodeFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L127>`_

Filters on HTTP response/status code.

.. code-block:: json

  {
    "comparison": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.StatusCodeFilter.comparison:

comparison
  (:ref:`config.accesslog.v3.ComparisonFilter <envoy_v3_api_msg_config.accesslog.v3.ComparisonFilter>`, *REQUIRED*) Comparison.
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.DurationFilter:

config.accesslog.v3.DurationFilter
----------------------------------

`[config.accesslog.v3.DurationFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L136>`_

Filters on total request duration in milliseconds.

.. code-block:: json

  {
    "comparison": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.DurationFilter.comparison:

comparison
  (:ref:`config.accesslog.v3.ComparisonFilter <envoy_v3_api_msg_config.accesslog.v3.ComparisonFilter>`, *REQUIRED*) Comparison.
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.NotHealthCheckFilter:

config.accesslog.v3.NotHealthCheckFilter
----------------------------------------

`[config.accesslog.v3.NotHealthCheckFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L146>`_

Filters for requests that are not health check requests. A health check
request is marked by the health check filter.

.. code-block:: json

  {}




.. _envoy_v3_api_msg_config.accesslog.v3.TraceableFilter:

config.accesslog.v3.TraceableFilter
-----------------------------------

`[config.accesslog.v3.TraceableFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L153>`_

Filters for requests that are traceable. See the tracing overview for more
information on how a request becomes traceable.

.. code-block:: json

  {}




.. _envoy_v3_api_msg_config.accesslog.v3.RuntimeFilter:

config.accesslog.v3.RuntimeFilter
---------------------------------

`[config.accesslog.v3.RuntimeFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L159>`_

Filters for random sampling of requests.

.. code-block:: json

  {
    "runtime_key": "...",
    "percent_sampled": "{...}",
    "use_independent_randomness": "..."
  }

.. _envoy_v3_api_field_config.accesslog.v3.RuntimeFilter.runtime_key:

runtime_key
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Runtime key to get an optional overridden numerator for use in the
  *percent_sampled* field. If found in runtime, this value will replace the
  default numerator.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.RuntimeFilter.percent_sampled:

percent_sampled
  (:ref:`type.v3.FractionalPercent <envoy_v3_api_msg_type.v3.FractionalPercent>`) The default sampling percentage. If not specified, defaults to 0% with
  denominator of 100.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.RuntimeFilter.use_independent_randomness:

use_independent_randomness
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) By default, sampling pivots on the header
  :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` being
  present. If :ref:`x-request-id<config_http_conn_man_headers_x-request-id>`
  is present, the filter will consistently sample across multiple hosts based
  on the runtime key value and the value extracted from
  :ref:`x-request-id<config_http_conn_man_headers_x-request-id>`. If it is
  missing, or *use_independent_randomness* is set to true, the filter will
  randomly sample based on the runtime key value alone.
  *use_independent_randomness* can be used for logging kill switches within
  complex nested :ref:`AndFilter
  <envoy_v3_api_msg_config.accesslog.v3.AndFilter>` and :ref:`OrFilter
  <envoy_v3_api_msg_config.accesslog.v3.OrFilter>` blocks that are easier to
  reason about from a probability perspective (i.e., setting to true will
  cause the filter to behave like an independent random variable when
  composed within logical operator filters).
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.AndFilter:

config.accesslog.v3.AndFilter
-----------------------------

`[config.accesslog.v3.AndFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L193>`_

Performs a logical “and” operation on the result of each filter in filters.
Filters are evaluated sequentially and if one of them returns false, the
filter returns false immediately.

.. code-block:: json

  {
    "filters": []
  }

.. _envoy_v3_api_field_config.accesslog.v3.AndFilter.filters:

filters
  (**repeated** :ref:`config.accesslog.v3.AccessLogFilter <envoy_v3_api_msg_config.accesslog.v3.AccessLogFilter>`, *REQUIRED*) 
  


.. _envoy_v3_api_msg_config.accesslog.v3.OrFilter:

config.accesslog.v3.OrFilter
----------------------------

`[config.accesslog.v3.OrFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L203>`_

Performs a logical “or” operation on the result of each individual filter.
Filters are evaluated sequentially and if one of them returns true, the
filter returns true immediately.

.. code-block:: json

  {
    "filters": []
  }

.. _envoy_v3_api_field_config.accesslog.v3.OrFilter.filters:

filters
  (**repeated** :ref:`config.accesslog.v3.AccessLogFilter <envoy_v3_api_msg_config.accesslog.v3.AccessLogFilter>`, *REQUIRED*) 
  


.. _envoy_v3_api_msg_config.accesslog.v3.HeaderFilter:

config.accesslog.v3.HeaderFilter
--------------------------------

`[config.accesslog.v3.HeaderFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L211>`_

Filters requests based on the presence or value of a request header.

.. code-block:: json

  {
    "header": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.HeaderFilter.header:

header
  (:ref:`config.route.v3.HeaderMatcher <envoy_v3_api_msg_config.route.v3.HeaderMatcher>`, *REQUIRED*) Only requests with a header which matches the specified HeaderMatcher will
  pass the filter check.
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.ResponseFlagFilter:

config.accesslog.v3.ResponseFlagFilter
--------------------------------------

`[config.accesslog.v3.ResponseFlagFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L224>`_

Filters requests that received responses with an Envoy response flag set.
A list of the response flags can be found
in the access log formatter
:ref:`documentation<config_access_log_format_response_flags>`.

.. code-block:: json

  {
    "flags": []
  }

.. _envoy_v3_api_field_config.accesslog.v3.ResponseFlagFilter.flags:

flags
  (**repeated** `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Only responses with the any of the flags listed in this field will be
  logged. This field is optional. If it is not specified, then any response
  flag will pass the filter check.
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.GrpcStatusFilter:

config.accesslog.v3.GrpcStatusFilter
------------------------------------

`[config.accesslog.v3.GrpcStatusFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L264>`_

Filters gRPC requests based on their response status. If a gRPC status is not
provided, the filter will infer the status from the HTTP status code.

.. code-block:: json

  {
    "statuses": [],
    "exclude": "..."
  }

.. _envoy_v3_api_field_config.accesslog.v3.GrpcStatusFilter.statuses:

statuses
  (**repeated** :ref:`config.accesslog.v3.GrpcStatusFilter.Status <envoy_v3_api_enum_config.accesslog.v3.GrpcStatusFilter.Status>`) Logs only responses that have any one of the gRPC statuses in this field.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.GrpcStatusFilter.exclude:

exclude
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If included and set to true, the filter will instead block all responses
  with a gRPC status or inferred gRPC status enumerated in statuses, and
  allow all other responses.
  
  

.. _envoy_v3_api_enum_config.accesslog.v3.GrpcStatusFilter.Status:

Enum config.accesslog.v3.GrpcStatusFilter.Status
------------------------------------------------

`[config.accesslog.v3.GrpcStatusFilter.Status proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L268>`_


.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.OK:

OK
  *(DEFAULT)* ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.CANCELED:

CANCELED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.UNKNOWN:

UNKNOWN
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.INVALID_ARGUMENT:

INVALID_ARGUMENT
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.DEADLINE_EXCEEDED:

DEADLINE_EXCEEDED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.NOT_FOUND:

NOT_FOUND
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.ALREADY_EXISTS:

ALREADY_EXISTS
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.PERMISSION_DENIED:

PERMISSION_DENIED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.RESOURCE_EXHAUSTED:

RESOURCE_EXHAUSTED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.FAILED_PRECONDITION:

FAILED_PRECONDITION
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.ABORTED:

ABORTED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.OUT_OF_RANGE:

OUT_OF_RANGE
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.UNIMPLEMENTED:

UNIMPLEMENTED
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.INTERNAL:

INTERNAL
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.UNAVAILABLE:

UNAVAILABLE
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.DATA_LOSS:

DATA_LOSS
  ⁣
  
.. _envoy_v3_api_enum_value_config.accesslog.v3.GrpcStatusFilter.Status.UNAUTHENTICATED:

UNAUTHENTICATED
  ⁣
  

.. _envoy_v3_api_msg_config.accesslog.v3.MetadataFilter:

config.accesslog.v3.MetadataFilter
----------------------------------

`[config.accesslog.v3.MetadataFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L303>`_

Filters based on matching dynamic metadata.
If the matcher path and key correspond to an existing key in dynamic
metadata, the request is logged only if the matcher value is equal to the
metadata value. If the matcher path and key *do not* correspond to an
existing key in dynamic metadata, the request is logged only if
match_if_key_not_found is "true" or unset.

.. code-block:: json

  {
    "matcher": "{...}",
    "match_if_key_not_found": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.MetadataFilter.matcher:

matcher
  (:ref:`type.matcher.v3.MetadataMatcher <envoy_v3_api_msg_type.matcher.v3.MetadataMatcher>`) Matcher to check metadata for specified value. For example, to match on the
  access_log_hint metadata, set the filter to "envoy.common" and the path to
  "access_log_hint", and the value to "true".
  
  
.. _envoy_v3_api_field_config.accesslog.v3.MetadataFilter.match_if_key_not_found:

match_if_key_not_found
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Default result if the key does not exist in dynamic metadata: if unset or
  true, then log; if false, then don't log.
  
  


.. _envoy_v3_api_msg_config.accesslog.v3.ExtensionFilter:

config.accesslog.v3.ExtensionFilter
-----------------------------------

`[config.accesslog.v3.ExtensionFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/accesslog/v3/accesslog.proto#L318>`_

Extension filter is statically registered at runtime.

.. code-block:: json

  {
    "name": "...",
    "typed_config": "{...}"
  }

.. _envoy_v3_api_field_config.accesslog.v3.ExtensionFilter.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the filter implementation to instantiate. The name must
  match a statically registered filter.
  
  
.. _envoy_v3_api_field_config.accesslog.v3.ExtensionFilter.typed_config:

typed_config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) 
  Custom configuration that depends on the filter being instantiated.
  
  

