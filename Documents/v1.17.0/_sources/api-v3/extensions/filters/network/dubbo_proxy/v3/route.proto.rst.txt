.. _envoy_v3_api_file_envoy/extensions/filters/network/dubbo_proxy/v3/route.proto:

Dubbo Proxy Route Configuration
===============================

Dubbo Proxy :ref:`configuration overview <config_network_filters_dubbo_proxy>`.

.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration:

extensions.filters.network.dubbo_proxy.v3.RouteConfiguration
------------------------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.RouteConfiguration proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L21>`_


.. code-block:: json

  {
    "name": "...",
    "interface": "...",
    "group": "...",
    "version": "...",
    "routes": []
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the route configuration. Reserved for future use in asynchronous route discovery.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.interface:

interface
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The interface name of the service.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.group:

group
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Which group does the interface belong to.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.version:

version
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The version number of the interface.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteConfiguration.routes:

routes
  (**repeated** :ref:`extensions.filters.network.dubbo_proxy.v3.Route <envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.Route>`) The list of routes that will be matched, in order, against incoming requests. The first route
  that matches will be used.
  
  


.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.Route:

extensions.filters.network.dubbo_proxy.v3.Route
-----------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.Route proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L42>`_


.. code-block:: json

  {
    "match": "{...}",
    "route": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.Route.match:

match
  (:ref:`extensions.filters.network.dubbo_proxy.v3.RouteMatch <envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.RouteMatch>`, *REQUIRED*) Route matching parameters.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.Route.route:

route
  (:ref:`extensions.filters.network.dubbo_proxy.v3.RouteAction <envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.RouteAction>`, *REQUIRED*) Route request to some upstream cluster.
  
  


.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.RouteMatch:

extensions.filters.network.dubbo_proxy.v3.RouteMatch
----------------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.RouteMatch proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L53>`_


.. code-block:: json

  {
    "method": "{...}",
    "headers": []
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteMatch.method:

method
  (:ref:`extensions.filters.network.dubbo_proxy.v3.MethodMatch <envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.MethodMatch>`) Method level routing matching.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteMatch.headers:

headers
  (**repeated** :ref:`config.route.v3.HeaderMatcher <envoy_v3_api_msg_config.route.v3.HeaderMatcher>`) Specifies a set of headers that the route should match on. The router will check the requestâ€™s
  headers against all the specified headers in the route config. A match will happen if all the
  headers in the route are present in the request with the same values (or based on presence if
  the value field is not in the config).
  
  


.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.RouteAction:

extensions.filters.network.dubbo_proxy.v3.RouteAction
-----------------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.RouteAction proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L67>`_


.. code-block:: json

  {
    "cluster": "...",
    "weighted_clusters": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.cluster:

cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Indicates the upstream cluster to which the request should be routed.
  
  
  
  Precisely one of :ref:`cluster <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.cluster>`, :ref:`weighted_clusters <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.weighted_clusters>` must be set.
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.weighted_clusters:

weighted_clusters
  (:ref:`config.route.v3.WeightedCluster <envoy_v3_api_msg_config.route.v3.WeightedCluster>`) Multiple upstream clusters can be specified for a given route. The
  request is routed to one of the upstream clusters based on weights
  assigned to each cluster.
  Currently ClusterWeight only supports the name and weight fields.
  
  
  
  Precisely one of :ref:`cluster <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.cluster>`, :ref:`weighted_clusters <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.RouteAction.weighted_clusters>` must be set.
  


.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.MethodMatch:

extensions.filters.network.dubbo_proxy.v3.MethodMatch
-----------------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.MethodMatch proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L85>`_


.. code-block:: json

  {
    "name": "{...}",
    "params_match": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.name:

name
  (:ref:`type.matcher.v3.StringMatcher <envoy_v3_api_msg_type.matcher.v3.StringMatcher>`) The name of the method.
  
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.params_match:

params_match
  (**repeated** map<`uint32 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, :ref:`extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier <envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>`>) Method parameter definition.
  The key is the parameter index, starting from 0.
  The value is the parameter matching type.
  
  
.. _envoy_v3_api_msg_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier:

extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier
-----------------------------------------------------------------------------

`[extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/network/dubbo_proxy/v3/route.proto#L90>`_

The parameter matching type.

.. code-block:: json

  {
    "exact_match": "...",
    "range_match": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.exact_match:

exact_match
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If specified, header match will be performed based on the value of the header.
  
  
  
  Only one of :ref:`exact_match <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.exact_match>`, :ref:`range_match <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.range_match>` may be set.
  
.. _envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.range_match:

range_match
  (:ref:`type.v3.Int64Range <envoy_v3_api_msg_type.v3.Int64Range>`) If specified, header match will be performed based on range.
  The rule will match if the request header value is within this range.
  The entire request header value must represent an integer in base 10 notation: consisting
  of an optional plus or minus sign followed by a sequence of digits. The rule will not match
  if the header value does not represent an integer. Match will fail for empty values,
  floating point numbers or if only a subsequence of the header value is an integer.
  
  Examples:
  
  * For range [-10,0), route will match for header value -1, but not for 0,
    "somestring", 10.9, "-1somestring"
  
  
  
  Only one of :ref:`exact_match <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.exact_match>`, :ref:`range_match <envoy_v3_api_field_extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.range_match>` may be set.
  



