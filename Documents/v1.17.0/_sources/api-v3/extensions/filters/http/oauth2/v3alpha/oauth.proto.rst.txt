.. _envoy_v3_api_file_envoy/extensions/filters/http/oauth2/v3alpha/oauth.proto:

OAuth
=====

.. _extension_envoy.filters.http.oauth2:


This extension may be referenced by the qualified name *envoy.filters.http.oauth2*

.. note::
  This extension is functional but has not had substantial production burn time, use only with this caveat.

  This extension is intended to be robust against untrusted downstream traffic. It assumes that the upstream is trusted.

.. warning::
   This API is work-in-progress and is subject to breaking changes.

OAuth :ref:`configuration overview <config_http_filters_oauth>`.


.. _envoy_v3_api_msg_extensions.filters.http.oauth2.v3alpha.OAuth2Credentials:

extensions.filters.http.oauth2.v3alpha.OAuth2Credentials
--------------------------------------------------------

`[extensions.filters.http.oauth2.v3alpha.OAuth2Credentials proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/oauth2/v3alpha/oauth.proto#L26>`_


.. code-block:: json

  {
    "client_id": "...",
    "token_secret": "{...}",
    "hmac_secret": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Credentials.client_id:

client_id
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The client_id to be used in the authorize calls. This value will be URL encoded when sent to the OAuth server.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Credentials.token_secret:

token_secret
  (:ref:`extensions.transport_sockets.tls.v3.SdsSecretConfig <envoy_v3_api_msg_extensions.transport_sockets.tls.v3.SdsSecretConfig>`, *REQUIRED*) The secret used to retrieve the access token. This value will be URL encoded when sent to the OAuth server.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Credentials.hmac_secret:

hmac_secret
  (:ref:`extensions.transport_sockets.tls.v3.SdsSecretConfig <envoy_v3_api_msg_extensions.transport_sockets.tls.v3.SdsSecretConfig>`, *REQUIRED*) If present, the secret token will be a HMAC using the provided secret.
  
  Configures how the secret token should be created.
  
  


.. _envoy_v3_api_msg_extensions.filters.http.oauth2.v3alpha.OAuth2Config:

extensions.filters.http.oauth2.v3alpha.OAuth2Config
---------------------------------------------------

`[extensions.filters.http.oauth2.v3alpha.OAuth2Config proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/oauth2/v3alpha/oauth.proto#L47>`_

OAuth config


.. code-block:: json

  {
    "token_endpoint": "{...}",
    "authorization_endpoint": "...",
    "credentials": "{...}",
    "redirect_uri": "...",
    "redirect_path_matcher": "{...}",
    "signout_path": "{...}",
    "forward_bearer_token": "...",
    "pass_through_matcher": []
  }

.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.token_endpoint:

token_endpoint
  (:ref:`config.core.v3.HttpUri <envoy_v3_api_msg_config.core.v3.HttpUri>`) Endpoint on the authorization server to retrieve the access token from.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.authorization_endpoint:

authorization_endpoint
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The endpoint redirect to for authorization in response to unauthorized requests.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.credentials:

credentials
  (:ref:`extensions.filters.http.oauth2.v3alpha.OAuth2Credentials <envoy_v3_api_msg_extensions.filters.http.oauth2.v3alpha.OAuth2Credentials>`, *REQUIRED*) Credentials used for OAuth.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.redirect_uri:

redirect_uri
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The redirect URI passed to the authorization endpoint. Supports header formatting
  tokens. For more information, including details on header value syntax, see the
  documentation on :ref:`custom request headers <config_http_conn_man_headers_custom_request_headers>`.
  
  This URI should not contain any query parameters.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.redirect_path_matcher:

redirect_path_matcher
  (:ref:`type.matcher.v3.PathMatcher <envoy_v3_api_msg_type.matcher.v3.PathMatcher>`, *REQUIRED*) Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.signout_path:

signout_path
  (:ref:`type.matcher.v3.PathMatcher <envoy_v3_api_msg_type.matcher.v3.PathMatcher>`, *REQUIRED*) The path to sign a user out, clearing their credential cookies.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.forward_bearer_token:

forward_bearer_token
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Forward the OAuth token as a Bearer to upstream web service.
  
  
.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2Config.pass_through_matcher:

pass_through_matcher
  (**repeated** :ref:`config.route.v3.HeaderMatcher <envoy_v3_api_msg_config.route.v3.HeaderMatcher>`) Any request that matches any of the provided matchers will be passed through without OAuth validation.
  
  


.. _envoy_v3_api_msg_extensions.filters.http.oauth2.v3alpha.OAuth2:

extensions.filters.http.oauth2.v3alpha.OAuth2
---------------------------------------------

`[extensions.filters.http.oauth2.v3alpha.OAuth2 proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/oauth2/v3alpha/oauth.proto#L79>`_

Filter config.

.. code-block:: json

  {
    "config": "{...}"
  }

.. _envoy_v3_api_field_extensions.filters.http.oauth2.v3alpha.OAuth2.config:

config
  (:ref:`extensions.filters.http.oauth2.v3alpha.OAuth2Config <envoy_v3_api_msg_extensions.filters.http.oauth2.v3alpha.OAuth2Config>`) Leave this empty to disable OAuth2 for a specific route, using per filter config.
  
  

