.. _envoy_v3_api_file_envoy/extensions/filters/http/ext_proc/v3alpha/processing_mode.proto:

External Processing Filter
==========================

.. _extension_envoy.filters.http.ext_proc:


This extension may be referenced by the qualified name *envoy.filters.http.ext_proc*

.. note::
  This extension is functional but has not had substantial production burn time, use only with this caveat.

  This extension has an unknown security posture and should only be used in deployments where both the downstream and upstream are trusted.

.. warning::
   This API is work-in-progress and is subject to breaking changes.

External Processing Filter Processing Mode


This configuration describes which parts of an HTTP request and
response are sent to a remote server and how they are delivered.

.. _envoy_v3_api_msg_extensions.filters.http.ext_proc.v3alpha.ProcessingMode:

extensions.filters.http.ext_proc.v3alpha.ProcessingMode
-------------------------------------------------------

`[extensions.filters.http.ext_proc.v3alpha.ProcessingMode proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/ext_proc/v3alpha/processing_mode.proto#L21>`_


.. code-block:: json

  {
    "request_header_mode": "...",
    "response_header_mode": "...",
    "request_body_mode": "...",
    "response_body_mode": "...",
    "request_trailer_mode": "...",
    "response_trailer_mode": "..."
  }

.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_header_mode:

request_header_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode>`) How to handle the request header. Default is "SEND".
  
  
.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_header_mode:

response_header_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode>`) How to handle the response header. Default is "SEND".
  
  
.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_body_mode:

request_body_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode>`) How to handle the request body. Default is "NONE".
  
  
.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_body_mode:

response_body_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode>`) How do handle the response body. Default is "NONE".
  
  
.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_trailer_mode:

request_trailer_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode>`) How to handle the request trailers. Default is "SKIP".
  
  
.. _envoy_v3_api_field_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_trailer_mode:

response_trailer_mode
  (:ref:`extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode <envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode>`) How to handle the response trailers. Default is "SKIP".
  
  

.. _envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode:

Enum extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode
---------------------------------------------------------------------------

`[extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/ext_proc/v3alpha/processing_mode.proto#L23>`_

Control how headers and trailers are handled

.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode.DEFAULT:

DEFAULT
  *(DEFAULT)* ⁣The default HeaderSendMode depends on which part of the message is being
  processed. By default, request and response headers are sent,
  while trailers are skipped.
  
  
.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode.SEND:

SEND
  ⁣Send the header or trailer.
  
  
.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.HeaderSendMode.SKIP:

SKIP
  ⁣Do not send the header or trailer.
  
  

.. _envoy_v3_api_enum_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode:

Enum extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode
-------------------------------------------------------------------------

`[extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/extensions/filters/http/ext_proc/v3alpha/processing_mode.proto#L37>`_

Control how the request and response bodies are handled

.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode.NONE:

NONE
  *(DEFAULT)* ⁣Do not send the body at all. This is the default.
  
  
.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode.STREAMED:

STREAMED
  ⁣Stream the body to the server in pieces as they arrive at the
  proxy.
  
  
.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode.BUFFERED:

BUFFERED
  ⁣Buffer the message body in memory and send the entire body at once.
  If the body exceeds the configured buffer limit, then the
  downstream system will receive an error.
  
  
.. _envoy_v3_api_enum_value_extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodySendMode.BUFFERED_PARTIAL:

BUFFERED_PARTIAL
  ⁣Buffer the message body in memory and send the entire body in one
  chunk. If the body exceeds the configured buffer limit, then the body contents
  up to the buffer limit will be sent.
  
  
