.. _envoy_api_file_envoy/config/filter/accesslog/v2/accesslog.proto:

Common access log types
=======================


.. _envoy_api_msg_config.filter.accesslog.v2.AccessLog:

config.filter.accesslog.v2.AccessLog
------------------------------------

`[config.filter.accesslog.v2.AccessLog proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L23>`_


.. code-block:: json

  {
    "name": "...",
    "filter": "{...}",
    "config": "{...}",
    "typed_config": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.AccessLog.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the access log implementation to instantiate. The name must
  match a statically registered access log. Current built-in loggers include:
  
  #. "envoy.access_loggers.file"
  #. "envoy.access_loggers.http_grpc"
  #. "envoy.access_loggers.tcp_grpc"
  
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLog.filter:

filter
  (:ref:`config.filter.accesslog.v2.AccessLogFilter <envoy_api_msg_config.filter.accesslog.v2.AccessLogFilter>`) Filter which is used to determine if the access log needs to be written.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLog.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) 
  Custom configuration that depends on the access log being instantiated. Built-in
  configurations include:
  
  #. "envoy.access_loggers.file": :ref:`FileAccessLog
     <envoy_api_msg_config.accesslog.v2.FileAccessLog>`
  #. "envoy.access_loggers.http_grpc": :ref:`HttpGrpcAccessLogConfig
     <envoy_api_msg_config.accesslog.v2.HttpGrpcAccessLogConfig>`
  #. "envoy.access_loggers.tcp_grpc": :ref:`TcpGrpcAccessLogConfig
     <envoy_api_msg_config.accesslog.v2.TcpGrpcAccessLogConfig>`
  
  
  Only one of :ref:`config <envoy_api_field_config.filter.accesslog.v2.AccessLog.config>`, :ref:`typed_config <envoy_api_field_config.filter.accesslog.v2.AccessLog.typed_config>` may be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLog.typed_config:

typed_config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) 
  Custom configuration that depends on the access log being instantiated. Built-in
  configurations include:
  
  #. "envoy.access_loggers.file": :ref:`FileAccessLog
     <envoy_api_msg_config.accesslog.v2.FileAccessLog>`
  #. "envoy.access_loggers.http_grpc": :ref:`HttpGrpcAccessLogConfig
     <envoy_api_msg_config.accesslog.v2.HttpGrpcAccessLogConfig>`
  #. "envoy.access_loggers.tcp_grpc": :ref:`TcpGrpcAccessLogConfig
     <envoy_api_msg_config.accesslog.v2.TcpGrpcAccessLogConfig>`
  
  
  Only one of :ref:`config <envoy_api_field_config.filter.accesslog.v2.AccessLog.config>`, :ref:`typed_config <envoy_api_field_config.filter.accesslog.v2.AccessLog.typed_config>` may be set.
  


.. _envoy_api_msg_config.filter.accesslog.v2.AccessLogFilter:

config.filter.accesslog.v2.AccessLogFilter
------------------------------------------

`[config.filter.accesslog.v2.AccessLogFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L52>`_


.. code-block:: json

  {
    "status_code_filter": "{...}",
    "duration_filter": "{...}",
    "not_health_check_filter": "{...}",
    "traceable_filter": "{...}",
    "runtime_filter": "{...}",
    "and_filter": "{...}",
    "or_filter": "{...}",
    "header_filter": "{...}",
    "response_flag_filter": "{...}",
    "grpc_status_filter": "{...}",
    "extension_filter": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter:

status_code_filter
  (:ref:`config.filter.accesslog.v2.StatusCodeFilter <envoy_api_msg_config.filter.accesslog.v2.StatusCodeFilter>`) Status code filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter:

duration_filter
  (:ref:`config.filter.accesslog.v2.DurationFilter <envoy_api_msg_config.filter.accesslog.v2.DurationFilter>`) Duration filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter:

not_health_check_filter
  (:ref:`config.filter.accesslog.v2.NotHealthCheckFilter <envoy_api_msg_config.filter.accesslog.v2.NotHealthCheckFilter>`) Not health check filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter:

traceable_filter
  (:ref:`config.filter.accesslog.v2.TraceableFilter <envoy_api_msg_config.filter.accesslog.v2.TraceableFilter>`) Traceable filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter:

runtime_filter
  (:ref:`config.filter.accesslog.v2.RuntimeFilter <envoy_api_msg_config.filter.accesslog.v2.RuntimeFilter>`) Runtime filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter:

and_filter
  (:ref:`config.filter.accesslog.v2.AndFilter <envoy_api_msg_config.filter.accesslog.v2.AndFilter>`) And filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter:

or_filter
  (:ref:`config.filter.accesslog.v2.OrFilter <envoy_api_msg_config.filter.accesslog.v2.OrFilter>`) Or filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter:

header_filter
  (:ref:`config.filter.accesslog.v2.HeaderFilter <envoy_api_msg_config.filter.accesslog.v2.HeaderFilter>`) Header filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter:

response_flag_filter
  (:ref:`config.filter.accesslog.v2.ResponseFlagFilter <envoy_api_msg_config.filter.accesslog.v2.ResponseFlagFilter>`) Response flag filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter:

grpc_status_filter
  (:ref:`config.filter.accesslog.v2.GrpcStatusFilter <envoy_api_msg_config.filter.accesslog.v2.GrpcStatusFilter>`) gRPC status filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter:

extension_filter
  (:ref:`config.filter.accesslog.v2.ExtensionFilter <envoy_api_msg_config.filter.accesslog.v2.ExtensionFilter>`) Extension filter.
  
  
  
  Precisely one of :ref:`status_code_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.status_code_filter>`, :ref:`duration_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.duration_filter>`, :ref:`not_health_check_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.not_health_check_filter>`, :ref:`traceable_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.traceable_filter>`, :ref:`runtime_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.runtime_filter>`, :ref:`and_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.and_filter>`, :ref:`or_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.or_filter>`, :ref:`header_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.header_filter>`, :ref:`response_flag_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.response_flag_filter>`, :ref:`grpc_status_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.grpc_status_filter>`, :ref:`extension_filter <envoy_api_field_config.filter.accesslog.v2.AccessLogFilter.extension_filter>` must be set.
  


.. _envoy_api_msg_config.filter.accesslog.v2.ComparisonFilter:

config.filter.accesslog.v2.ComparisonFilter
-------------------------------------------

`[config.filter.accesslog.v2.ComparisonFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L92>`_

Filter on an integer comparison.

.. code-block:: json

  {
    "op": "...",
    "value": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.ComparisonFilter.op:

op
  (:ref:`config.filter.accesslog.v2.ComparisonFilter.Op <envoy_api_enum_config.filter.accesslog.v2.ComparisonFilter.Op>`) Comparison operator.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.ComparisonFilter.value:

value
  (:ref:`core.RuntimeUInt32 <envoy_api_msg_core.RuntimeUInt32>`) Value to compare against.
  
  

.. _envoy_api_enum_config.filter.accesslog.v2.ComparisonFilter.Op:

Enum config.filter.accesslog.v2.ComparisonFilter.Op
---------------------------------------------------

`[config.filter.accesslog.v2.ComparisonFilter.Op proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L93>`_


.. _envoy_api_enum_value_config.filter.accesslog.v2.ComparisonFilter.Op.EQ:

EQ
  *(DEFAULT)* ⁣=
  
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.ComparisonFilter.Op.GE:

GE
  ⁣>=
  
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.ComparisonFilter.Op.LE:

LE
  ⁣<=
  
  

.. _envoy_api_msg_config.filter.accesslog.v2.StatusCodeFilter:

config.filter.accesslog.v2.StatusCodeFilter
-------------------------------------------

`[config.filter.accesslog.v2.StatusCodeFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L112>`_

Filters on HTTP response/status code.

.. code-block:: json

  {
    "comparison": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.StatusCodeFilter.comparison:

comparison
  (:ref:`config.filter.accesslog.v2.ComparisonFilter <envoy_api_msg_config.filter.accesslog.v2.ComparisonFilter>`, *REQUIRED*) Comparison.
  
  


.. _envoy_api_msg_config.filter.accesslog.v2.DurationFilter:

config.filter.accesslog.v2.DurationFilter
-----------------------------------------

`[config.filter.accesslog.v2.DurationFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L118>`_

Filters on total request duration in milliseconds.

.. code-block:: json

  {
    "comparison": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.DurationFilter.comparison:

comparison
  (:ref:`config.filter.accesslog.v2.ComparisonFilter <envoy_api_msg_config.filter.accesslog.v2.ComparisonFilter>`, *REQUIRED*) Comparison.
  
  


.. _envoy_api_msg_config.filter.accesslog.v2.NotHealthCheckFilter:

config.filter.accesslog.v2.NotHealthCheckFilter
-----------------------------------------------

`[config.filter.accesslog.v2.NotHealthCheckFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L125>`_

Filters for requests that are not health check requests. A health check
request is marked by the health check filter.

.. code-block:: json

  {}




.. _envoy_api_msg_config.filter.accesslog.v2.TraceableFilter:

config.filter.accesslog.v2.TraceableFilter
------------------------------------------

`[config.filter.accesslog.v2.TraceableFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L130>`_

Filters for requests that are traceable. See the tracing overview for more
information on how a request becomes traceable.

.. code-block:: json

  {}




.. _envoy_api_msg_config.filter.accesslog.v2.RuntimeFilter:

config.filter.accesslog.v2.RuntimeFilter
----------------------------------------

`[config.filter.accesslog.v2.RuntimeFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L134>`_

Filters for random sampling of requests.

.. code-block:: json

  {
    "runtime_key": "...",
    "percent_sampled": "{...}",
    "use_independent_randomness": "..."
  }

.. _envoy_api_field_config.filter.accesslog.v2.RuntimeFilter.runtime_key:

runtime_key
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Runtime key to get an optional overridden numerator for use in the *percent_sampled* field.
  If found in runtime, this value will replace the default numerator.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.RuntimeFilter.percent_sampled:

percent_sampled
  (:ref:`type.FractionalPercent <envoy_api_msg_type.FractionalPercent>`) The default sampling percentage. If not specified, defaults to 0% with denominator of 100.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.RuntimeFilter.use_independent_randomness:

use_independent_randomness
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) By default, sampling pivots on the header
  :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` being present. If
  :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` is present, the filter will
  consistently sample across multiple hosts based on the runtime key value and the value
  extracted from :ref:`x-request-id<config_http_conn_man_headers_x-request-id>`. If it is
  missing, or *use_independent_randomness* is set to true, the filter will randomly sample based
  on the runtime key value alone. *use_independent_randomness* can be used for logging kill
  switches within complex nested :ref:`AndFilter
  <envoy_api_msg_config.filter.accesslog.v2.AndFilter>` and :ref:`OrFilter
  <envoy_api_msg_config.filter.accesslog.v2.OrFilter>` blocks that are easier to reason about
  from a probability perspective (i.e., setting to true will cause the filter to behave like
  an independent random variable when composed within logical operator filters).
  
  


.. _envoy_api_msg_config.filter.accesslog.v2.AndFilter:

config.filter.accesslog.v2.AndFilter
------------------------------------

`[config.filter.accesslog.v2.AndFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L160>`_

Performs a logical “and” operation on the result of each filter in filters.
Filters are evaluated sequentially and if one of them returns false, the
filter returns false immediately.

.. code-block:: json

  {
    "filters": []
  }

.. _envoy_api_field_config.filter.accesslog.v2.AndFilter.filters:

filters
  (**repeated** :ref:`config.filter.accesslog.v2.AccessLogFilter <envoy_api_msg_config.filter.accesslog.v2.AccessLogFilter>`, *REQUIRED*) 
  


.. _envoy_api_msg_config.filter.accesslog.v2.OrFilter:

config.filter.accesslog.v2.OrFilter
-----------------------------------

`[config.filter.accesslog.v2.OrFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L167>`_

Performs a logical “or” operation on the result of each individual filter.
Filters are evaluated sequentially and if one of them returns true, the
filter returns true immediately.

.. code-block:: json

  {
    "filters": []
  }

.. _envoy_api_field_config.filter.accesslog.v2.OrFilter.filters:

filters
  (**repeated** :ref:`config.filter.accesslog.v2.AccessLogFilter <envoy_api_msg_config.filter.accesslog.v2.AccessLogFilter>`, *REQUIRED*) 
  


.. _envoy_api_msg_config.filter.accesslog.v2.HeaderFilter:

config.filter.accesslog.v2.HeaderFilter
---------------------------------------

`[config.filter.accesslog.v2.HeaderFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L172>`_

Filters requests based on the presence or value of a request header.

.. code-block:: json

  {
    "header": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.HeaderFilter.header:

header
  (:ref:`route.HeaderMatcher <envoy_api_msg_route.HeaderMatcher>`, *REQUIRED*) Only requests with a header which matches the specified HeaderMatcher will pass the filter
  check.
  
  


.. _envoy_api_msg_config.filter.accesslog.v2.ResponseFlagFilter:

config.filter.accesslog.v2.ResponseFlagFilter
---------------------------------------------

`[config.filter.accesslog.v2.ResponseFlagFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L181>`_

Filters requests that received responses with an Envoy response flag set.
A list of the response flags can be found
in the access log formatter :ref:`documentation<config_access_log_format_response_flags>`.

.. code-block:: json

  {
    "flags": []
  }

.. _envoy_api_field_config.filter.accesslog.v2.ResponseFlagFilter.flags:

flags
  (**repeated** `string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Only responses with the any of the flags listed in this field will be logged.
  This field is optional. If it is not specified, then any response flag will pass
  the filter check.
  
  


.. _envoy_api_msg_config.filter.accesslog.v2.GrpcStatusFilter:

config.filter.accesslog.v2.GrpcStatusFilter
-------------------------------------------

`[config.filter.accesslog.v2.GrpcStatusFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L214>`_

Filters gRPC requests based on their response status. If a gRPC status is not provided, the
filter will infer the status from the HTTP status code.

.. code-block:: json

  {
    "statuses": [],
    "exclude": "..."
  }

.. _envoy_api_field_config.filter.accesslog.v2.GrpcStatusFilter.statuses:

statuses
  (**repeated** :ref:`config.filter.accesslog.v2.GrpcStatusFilter.Status <envoy_api_enum_config.filter.accesslog.v2.GrpcStatusFilter.Status>`) Logs only responses that have any one of the gRPC statuses in this field.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.GrpcStatusFilter.exclude:

exclude
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If included and set to true, the filter will instead block all responses with a gRPC status or
  inferred gRPC status enumerated in statuses, and allow all other responses.
  
  

.. _envoy_api_enum_config.filter.accesslog.v2.GrpcStatusFilter.Status:

Enum config.filter.accesslog.v2.GrpcStatusFilter.Status
-------------------------------------------------------

`[config.filter.accesslog.v2.GrpcStatusFilter.Status proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L215>`_


.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.OK:

OK
  *(DEFAULT)* ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.CANCELED:

CANCELED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.UNKNOWN:

UNKNOWN
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.INVALID_ARGUMENT:

INVALID_ARGUMENT
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.DEADLINE_EXCEEDED:

DEADLINE_EXCEEDED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.NOT_FOUND:

NOT_FOUND
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.ALREADY_EXISTS:

ALREADY_EXISTS
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.PERMISSION_DENIED:

PERMISSION_DENIED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.RESOURCE_EXHAUSTED:

RESOURCE_EXHAUSTED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.FAILED_PRECONDITION:

FAILED_PRECONDITION
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.ABORTED:

ABORTED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.OUT_OF_RANGE:

OUT_OF_RANGE
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.UNIMPLEMENTED:

UNIMPLEMENTED
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.INTERNAL:

INTERNAL
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.UNAVAILABLE:

UNAVAILABLE
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.DATA_LOSS:

DATA_LOSS
  ⁣
  
.. _envoy_api_enum_value_config.filter.accesslog.v2.GrpcStatusFilter.Status.UNAUTHENTICATED:

UNAUTHENTICATED
  ⁣
  

.. _envoy_api_msg_config.filter.accesslog.v2.ExtensionFilter:

config.filter.accesslog.v2.ExtensionFilter
------------------------------------------

`[config.filter.accesslog.v2.ExtensionFilter proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/filter/accesslog/v2/accesslog.proto#L244>`_

Extension filter is statically registered at runtime.

.. code-block:: json

  {
    "name": "...",
    "config": "{...}",
    "typed_config": "{...}"
  }

.. _envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The name of the filter implementation to instantiate. The name must
  match a statically registered filter.
  
  
.. _envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.config:

config
  (`Struct <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct>`_) 
  Custom configuration that depends on the filter being instantiated.
  
  
  Only one of :ref:`config <envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.config>`, :ref:`typed_config <envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.typed_config>` may be set.
  
.. _envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.typed_config:

typed_config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) 
  Custom configuration that depends on the filter being instantiated.
  
  
  Only one of :ref:`config <envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.config>`, :ref:`typed_config <envoy_api_field_config.filter.accesslog.v2.ExtensionFilter.typed_config>` may be set.
  

