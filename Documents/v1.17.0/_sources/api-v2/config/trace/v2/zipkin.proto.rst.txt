.. _envoy_api_file_envoy/config/trace/v2/zipkin.proto:

Zipkin tracer
=============


.. _envoy_api_msg_config.trace.v2.ZipkinConfig:

config.trace.v2.ZipkinConfig
----------------------------

`[config.trace.v2.ZipkinConfig proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/trace/v2/zipkin.proto#L20>`_

Configuration for the Zipkin tracer.

.. _extension_envoy.tracers.zipkin:


This extension may be referenced by the qualified name *envoy.tracers.zipkin*

.. note::
  

  This extension is intended to be robust against untrusted downstream traffic. It assumes that the upstream is trusted.

.. code-block:: json

  {
    "collector_cluster": "...",
    "collector_endpoint": "...",
    "trace_id_128bit": "...",
    "shared_span_context": "{...}",
    "collector_endpoint_version": "..."
  }

.. _envoy_api_field_config.trace.v2.ZipkinConfig.collector_cluster:

collector_cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The cluster manager cluster that hosts the Zipkin collectors. Note that the
  Zipkin cluster must be defined in the :ref:`Bootstrap static cluster
  resources <envoy_api_field_config.bootstrap.v2.Bootstrap.StaticResources.clusters>`.
  
  
.. _envoy_api_field_config.trace.v2.ZipkinConfig.collector_endpoint:

collector_endpoint
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The API endpoint of the Zipkin service where the spans will be sent. When
  using a standard Zipkin installation, the API endpoint is typically
  /api/v1/spans, which is the default value.
  
  
.. _envoy_api_field_config.trace.v2.ZipkinConfig.trace_id_128bit:

trace_id_128bit
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Determines whether a 128bit trace id will be used when creating a new
  trace instance. The default value is false, which will result in a 64 bit trace id being used.
  
  
.. _envoy_api_field_config.trace.v2.ZipkinConfig.shared_span_context:

shared_span_context
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) Determines whether client and server spans will share the same span context.
  The default value is true.
  
  
.. _envoy_api_field_config.trace.v2.ZipkinConfig.collector_endpoint_version:

collector_endpoint_version
  (:ref:`config.trace.v2.ZipkinConfig.CollectorEndpointVersion <envoy_api_enum_config.trace.v2.ZipkinConfig.CollectorEndpointVersion>`) Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
  used.
  
  

.. _envoy_api_enum_config.trace.v2.ZipkinConfig.CollectorEndpointVersion:

Enum config.trace.v2.ZipkinConfig.CollectorEndpointVersion
----------------------------------------------------------

`[config.trace.v2.ZipkinConfig.CollectorEndpointVersion proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/config/trace/v2/zipkin.proto#L22>`_

Available Zipkin collector endpoint versions.

.. _envoy_api_enum_value_config.trace.v2.ZipkinConfig.CollectorEndpointVersion.HTTP_JSON_V1:

HTTP_JSON_V1
  *(DEFAULT)* ⁣Zipkin API v1, JSON over HTTP.
  
  
.. _envoy_api_enum_value_config.trace.v2.ZipkinConfig.CollectorEndpointVersion.HTTP_JSON:

HTTP_JSON
  ⁣Zipkin API v2, JSON over HTTP.
  
  
.. _envoy_api_enum_value_config.trace.v2.ZipkinConfig.CollectorEndpointVersion.HTTP_PROTO:

HTTP_PROTO
  ⁣Zipkin API v2, protobuf over HTTP.
  
  

