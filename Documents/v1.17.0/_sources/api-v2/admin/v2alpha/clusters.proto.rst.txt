.. _envoy_api_file_envoy/admin/v2alpha/clusters.proto:

Clusters
========


.. _envoy_api_msg_admin.v2alpha.Clusters:

admin.v2alpha.Clusters
----------------------

`[admin.v2alpha.Clusters proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/admin/v2alpha/clusters.proto#L21>`_

Admin endpoint uses this wrapper for `/clusters` to display cluster status information.
See :ref:`/clusters <operations_admin_interface_clusters>` for more information.

.. code-block:: json

  {
    "cluster_statuses": []
  }

.. _envoy_api_field_admin.v2alpha.Clusters.cluster_statuses:

cluster_statuses
  (**repeated** :ref:`admin.v2alpha.ClusterStatus <envoy_api_msg_admin.v2alpha.ClusterStatus>`) Mapping from cluster name to each cluster's status.
  
  


.. _envoy_api_msg_admin.v2alpha.ClusterStatus:

admin.v2alpha.ClusterStatus
---------------------------

`[admin.v2alpha.ClusterStatus proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/admin/v2alpha/clusters.proto#L28>`_

Details an individual cluster's current status.

.. code-block:: json

  {
    "name": "...",
    "added_via_api": "...",
    "success_rate_ejection_threshold": "{...}",
    "host_statuses": [],
    "local_origin_success_rate_ejection_threshold": "{...}"
  }

.. _envoy_api_field_admin.v2alpha.ClusterStatus.name:

name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Name of the cluster.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.added_via_api:

added_via_api
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Denotes whether this cluster was added via API or configured statically.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.success_rate_ejection_threshold:

success_rate_ejection_threshold
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) The success rate threshold used in the last interval.
  If
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *false*, all errors: externally and locally generated were used to calculate the threshold.
  If
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *true*, only externally generated errors were used to calculate the threshold.
  The threshold is used to eject hosts based on their success rate. See
  :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for details.
  
  Note: this field may be omitted in any of the three following cases:
  
  1. There were not enough hosts with enough request volume to proceed with success rate based
     outlier ejection.
  2. The threshold is computed to be < 0 because a negative value implies that there was no
     threshold for that interval.
  3. Outlier detection is not enabled for this cluster.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.host_statuses:

host_statuses
  (**repeated** :ref:`admin.v2alpha.HostStatus <envoy_api_msg_admin.v2alpha.HostStatus>`) Mapping from host address to the host's current status.
  
  
.. _envoy_api_field_admin.v2alpha.ClusterStatus.local_origin_success_rate_ejection_threshold:

local_origin_success_rate_ejection_threshold
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) The success rate threshold used in the last interval when only locally originated failures were
  taken into account and externally originated errors were treated as success.
  This field should be interpreted only when
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *true*. The threshold is used to eject hosts based on their success rate.
  See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
  details.
  
  Note: this field may be omitted in any of the three following cases:
  
  1. There were not enough hosts with enough request volume to proceed with success rate based
     outlier ejection.
  2. The threshold is computed to be < 0 because a negative value implies that there was no
     threshold for that interval.
  3. Outlier detection is not enabled for this cluster.
  
  


.. _envoy_api_msg_admin.v2alpha.HostStatus:

admin.v2alpha.HostStatus
------------------------

`[admin.v2alpha.HostStatus proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/admin/v2alpha/clusters.proto#L77>`_

Current state of a particular host.

.. code-block:: json

  {
    "address": "{...}",
    "stats": [],
    "health_status": "{...}",
    "success_rate": "{...}",
    "weight": "...",
    "hostname": "...",
    "priority": "...",
    "local_origin_success_rate": "{...}",
    "locality": "{...}"
  }

.. _envoy_api_field_admin.v2alpha.HostStatus.address:

address
  (:ref:`core.Address <envoy_api_msg_core.Address>`) Address of this host.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.stats:

stats
  (**repeated** :ref:`admin.v2alpha.SimpleMetric <envoy_api_msg_admin.v2alpha.SimpleMetric>`) List of stats specific to this host.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.health_status:

health_status
  (:ref:`admin.v2alpha.HostHealthStatus <envoy_api_msg_admin.v2alpha.HostHealthStatus>`) The host's current health status.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.success_rate:

success_rate
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) Request success rate for this host over the last calculated interval.
  If
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *false*, all errors: externally and locally generated were used in success rate
  calculation. If
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *true*, only externally generated errors were used in success rate calculation.
  See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
  details.
  
  Note: the message will not be present if host did not have enough request volume to calculate
  success rate or the cluster did not have enough hosts to run through success rate outlier
  ejection.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.weight:

weight
  (`uint32 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host's weight. If not configured, the value defaults to 1.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.hostname:

hostname
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The hostname of the host, if applicable.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.priority:

priority
  (`uint32 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host's priority. If not configured, the value defaults to 0 (highest priority).
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.local_origin_success_rate:

local_origin_success_rate
  (:ref:`type.Percent <envoy_api_msg_type.Percent>`) Request success rate for this host over the last calculated
  interval when only locally originated errors are taken into account and externally originated
  errors were treated as success.
  This field should be interpreted only when
  :ref:`outlier_detection.split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
  is *true*.
  See :ref:`Cluster outlier detection <arch_overview_outlier_detection>` documentation for
  details.
  
  Note: the message will not be present if host did not have enough request volume to calculate
  success rate or the cluster did not have enough hosts to run through success rate outlier
  ejection.
  
  
.. _envoy_api_field_admin.v2alpha.HostStatus.locality:

locality
  (:ref:`core.Locality <envoy_api_msg_core.Locality>`) locality of the host.
  
  


.. _envoy_api_msg_admin.v2alpha.HostHealthStatus:

admin.v2alpha.HostHealthStatus
------------------------------

`[admin.v2alpha.HostHealthStatus proto] <https://github.com/envoyproxy/envoy/blob/5c801b25cae04f06bf48248c90e87d623d7a6283/api/envoy/admin/v2alpha/clusters.proto#L131>`_

Health status for a host.

.. code-block:: json

  {
    "failed_active_health_check": "...",
    "failed_outlier_check": "...",
    "failed_active_degraded_check": "...",
    "pending_dynamic_removal": "...",
    "pending_active_hc": "...",
    "eds_health_status": "..."
  }

.. _envoy_api_field_admin.v2alpha.HostHealthStatus.failed_active_health_check:

failed_active_health_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host is currently failing active health checks.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.failed_outlier_check:

failed_outlier_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host is currently considered an outlier and has been ejected.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.failed_active_degraded_check:

failed_active_degraded_check
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host is currently being marked as degraded through active health checking.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.pending_dynamic_removal:

pending_dynamic_removal
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host has been removed from service discovery, but is being stabilized due to active
  health checking.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.pending_active_hc:

pending_active_hc
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The host has not yet been health checked.
  
  
.. _envoy_api_field_admin.v2alpha.HostHealthStatus.eds_health_status:

eds_health_status
  (:ref:`core.HealthStatus <envoy_api_enum_core.HealthStatus>`) Health status as reported by EDS. Note: only HEALTHY and UNHEALTHY are currently supported
  here.
  
  

